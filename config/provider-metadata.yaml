name: SAP/btp
resources:
    btp_directory:
        subCategory: ""
        description: 'Directories allow you to organize and manage your subaccounts according to your technical and business needs. The use of directories is optional. You can create up to five levels of directories in your account hierarchy. If you have directories, you can still create subaccounts directly under your global account. Tips: You must be assigned to the global account admin role, or the directory admin if the directory is configured to manage its authorizations.A directory path in the account hierarchy can have only one directory that is enabled with the ENTITLEMENTS or AUTHORIZATIONS features. If such a directory exists, other directories in that path can only be enabled with the DEFAULT features. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/account-model'
        name: btp_directory
        title: btp_directory Resource - terraform-provider-btp
        examples:
            - name: parent
              manifest: |-
                {
                  "description": "This is a parent directory.",
                  "name": "my-parent-directory"
                }
            - name: child
              manifest: |-
                {
                  "description": "This is a child directory.",
                  "name": "my-child-directory",
                  "parent_id": "${btp_directory.parent.id}"
                }
              references:
                parent_id: btp_directory.parent.id
            - name: dir_with_features
              manifest: |-
                {
                  "description": "This is a directory with features.",
                  "features": [
                    "DEFAULT",
                    "ENTITLEMENTS",
                    "AUTHORIZATIONS"
                  ],
                  "name": "my-feat-directory"
                }
        argumentDocs:
            DEFAULT (D): |-
                | All directories have the following basic feature enabled: 1. Group and filter subaccounts for reports and filters  2. Monitor usage and costs on a directory level (costs only available for contracts that use the consumption-based commercial model) 3. Set custom properties and tags to the directory for identification and reporting purposes. |
                | ENTITLEMENTS (E) | Allows the assignment of a quota for services and applications to the directory from the global account quota for distribution to the subaccounts under this directory. |
                | AUTHORIZATIONS (A) | Allows the assignment of users as administrators or viewers of this directory. You must apply this feature in combination with the ENTITLEMENTS feature. |
            ENTITLEMENTS: or AUTHORIZATIONS features. If such a directory exists, other directories in that path can only be enabled with the DEFAULT features.
            OK: |-
                | The CRUD operation or series of operations completed successfully. |
                | STARTED | CRUD operation on an entity has started. |
                | CREATING | Creating entity operation is in progress. |
                | UPDATING | Updating entity operation is in progress. |
                | MOVING | Moving entity operation is in progress. |
                | PROCESSING | A series of operations related to the entity is in progress. |
                | DELETING | Deleting entity operation is in progress. |
                | PENDING REVIEW | The processing operation has been stopped for reviewing and can be restarted by the operator. |
                | CANCELLED | The operation or processing was canceled by the operator. |
                | CREATION_FAILED | The creation operation failed, and the entity was not created or was created but cannot be used. |
                | UPDATE_FAILED | The update operation failed, and the entity was not updated. |
                | PROCESSING_FAILED | The processing operations failed. |
                | DELETION_FAILED | The delete operation failed, and the entity was not deleted. |
                | MOVE_FAILED | Entity could not be moved to a different location. |
                | MIGRATING | Migrating entity from Neo to Cloud Foundry. |
            created_by: (String) The details of the user that created the directory.
            created_date: (String) The date and time when the resource was created in RFC3339 format.
            description: (String) A description of the directory.
            features: '(Set of String) The features that are enabled for the directory. Possible values are:'
            id: (String) The ID of the directory.
            labels: (Map of Set of String) Contains information about the labels assigned to a specified global account. Labels are represented in a JSON array of key-value pairs; each key has up to 10 corresponding values.
            last_modified: (String) The date and time when the resource was last modified in RFC3339 format.
            name: (String) The display name of the directory.
            parent_id: (String) The ID of the directory's parent entity. Typically this is the global account.
            state: '(String) The current state of the directory. Possible values are:'
            subdomain: (String) Applies only to directories that have the user authorization management feature enabled. The subdomain becomes part of the path used to access the authorization tenant of the directory. It has to be unique within the defined region.
        importStatements: []
    btp_directory_api_credential:
        subCategory: ""
        description: 'Manage API Credentials at the Directory level. These credentials will enable you to consume the REST APIs of the SAP Authorization and Trust Management service (XSUAA). With the client ID and client secret, or certificate, you can request an access token for the APIs in the targeted directory. Tip: You must be assigned to directory admin or viewer role. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/entitlements-and-quotas'
        name: btp_directory_api_credential
        title: btp_directory_api_credential Resource - terraform-provider-btp
        examples:
            - name: with-secret
              manifest: |-
                {
                  "directory_id": "d1298936-ddaf-4a82-b1d7-3ad29a732b61",
                  "name": "directory-api-credential-with-secret",
                  "read_only": false
                }
            - name: with-certificate
              manifest: |-
                {
                  "certificate_passed": "${data.external.values.result[\"certificate\"]}",
                  "directory_id": "d1298936-ddaf-4a82-b1d7-3ad29a732b61",
                  "name": "directory-api-credential-with-certificate",
                  "read_only": false
                }
              references:
                certificate_passed: data.external.values.result["certificate"]
            - name: read-only
              manifest: |-
                {
                  "directory_id": "d1298936-ddaf-4a82-b1d7-3ad29a732b61",
                  "name": "read-only-directory-api-credential",
                  "read_only": true
                }
        argumentDocs:
            api_url: (String) The URL to be used to make the API calls.
            certificate_passed: (String) If the user prefers to use a certificate, they must provide the certificate value in PEM format "----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----".
            certificate_received: (String) The certificate that is computed based on the one passed by the user.
            client_id: (String) A unique ID associated with the API credential.
            client_secret: (String) If the certificate is omitted, then a unique secret is generated for the API credential.
            credential_type: (String) The supported credential types are Secrets (Default) or Certificates.
            directory_id: (String) The ID of the directory.
            key: (String) RSA key generated if the API credential is created with a certificate.
            name: (String) The name for the API credential.
            read_only: (Boolean) Access restriction placed on the API credential. If set to true, the resource has only read-only access.
            token_url: (String) The URL to be used to fetch the access token to make use of the XSUAA REST APIs.
        importStatements: []
    btp_directory_entitlement:
        subCategory: ""
        description: 'Assigns the entitlement plan of a service, multitenant application, or environment, to a directory. Note that some environments, such as Cloud Foundry, are available by default to all global accounts and their directorys, and therefore are not made available as entitlements. Tip: You must be assigned to the admin role of the global account or the directory. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/entitlements-and-quotas'
        name: btp_directory_entitlement
        title: btp_directory_entitlement Resource - terraform-provider-btp
        examples:
            - name: alert_notification_service
              manifest: |-
                {
                  "directory_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
                  "plan_name": "free",
                  "service_name": "alert-notification"
                }
            - name: uas_reporting
              manifest: |-
                {
                  "amount": 1,
                  "directory_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
                  "plan_name": "reporting-directory",
                  "service_name": "uas"
                }
            - name: uas_reporting
              manifest: |-
                {
                  "auto_assign": true,
                  "directory_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
                  "distribute": true,
                  "plan_name": "free",
                  "service_name": "alert-notification"
                }
        argumentDocs:
            PLATFORM: |-
                |  A service required for using a specific platform; for example, Application Runtime is required for the Cloud Foundry platform. |
                | SERVICE | A commercial or technical service. that has a numeric quota (amount) when entitled or assigned to a resource. When assigning entitlements of this type, use the 'amount' option. |
                | ELASTIC_SERVICE | A commercial or technical service that has no numeric quota (amount) when entitled or assigned to a resource. Generally this type of service can be as many times as needed when enabled, but may in some cases be restricted by the service owner. |
                | ELASTIC_LIMITED | An elastic service that can be enabled for only one subaccount per global account. |
                | APPLICATION | A multitenant application to which consumers can subscribe. As opposed to applications defined as a 'QUOTA_BASED_APPLICATION', these applications do not have a numeric quota and are simply enabled or disabled as entitlements per subaccount. |
                | QUOTA_BASED_APPLICATION | A multitenant application to which consumers can subscribe. As opposed to applications defined as 'APPLICATION', these applications have an numeric quota that limits consumer usage of the subscribed application per subaccount. |
                | ENVIRONMENT |  An environment service; for example, Cloud Foundry. |
            amount: (Number) The quota assigned to the directory.
            auto_assign: (Boolean) Determines whether the plans of entitlements that have a numeric quota with the amount specified in auto_distribute_amount are automatically allocated to any new subaccount that is added to the directory in the future. For entitlements without a numeric quota, it shows if the plan are assigned to any new subaccount that is added to the directory in the future (auto_distribute_amount is not needed). If the distribute parameter is set, the same assignment is also made to all subaccounts currently in the directory. Entitlements are subject to available quota in the directory.
            auto_distribute_amount: (Number) The quota of the specified plan automatically allocated to any new subaccount that is created in the future in the directory. When applying this option, auto_assign and/or distribute must also be set. Applies only to entitlements that have a numeric quota.
            category: '(String) The current state of the entitlement. Possible values are:'
            directory_id: (String) The ID of the directory.
            distribute: (Boolean) Defines the assignment of the plan with the quota specified in auto_distribute_amount to subaccounts currently located in the specified directory. For entitlements without a numeric quota, the plan is assigned to the subaccounts currently located in the directory (auto_distribute_amount is not needed). When applying this option, auto_assign must also be set.
            id: (String) The ID of the entitled service plan.
            plan_id: (String) The ID of the entitled service plan.
            plan_name: (String) The name of the entitled service plan.
            service_name: (String) The name of the entitled service.
        importStatements: []
    btp_directory_role:
        subCategory: ""
        description: 'Creates a role in a directory. Tip: You must be assigned to the admin role of the global account or the directory. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts'
        name: btp_directory_role
        title: btp_directory_role Resource - terraform-provider-btp
        examples:
            - name: dirrole
              manifest: |-
                {
                  "app_id": "uas!b36585",
                  "directory_id": "ddfc2206-5f11-48ed-a1ec-29010af70050",
                  "name": "DirUsageRepViewTest",
                  "role_template_name": "Directory_Usage_Reporting_Viewer"
                }
        argumentDocs:
            app_id: (String) The ID of the xsuaa application.
            custom_grant_as_authority_to_apps: (Set of String)
            custom_granted_apps: (Set of String)
            description: (String) The role description.
            directory_id: (String) The ID of the directory.
            grant_as_authority_to_apps: (Set of String)
            granted_apps: (Set of String)
            id: (String, Deprecated) The combined unique ID of the role.
            name: (String) The name of the role.
            read_only: (Boolean) Shows whether the role can be modified or not.
            role_template_name: (String) The name of the role template.
            scopes: (Attributes List) Scopes available with this role. (see below for nested schema)
        importStatements: []
    btp_directory_role_collection:
        subCategory: ""
        description: 'Creates a role collection in a directory. Tip: You must be assigned to the admin role of the global account or the directory. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts'
        name: btp_directory_role_collection
        title: btp_directory_role_collection Resource - terraform-provider-btp
        examples:
            - name: my_collection
              manifest: |-
                {
                  "description": "A description of what the role collection is supposed to do.",
                  "directory_id": "dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0",
                  "name": "My own role collection",
                  "roles": [
                    {
                      "name": "Directory Admin",
                      "role_template_app_id": "cis-central!b13",
                      "role_template_name": "Directory_Admin"
                    }
                  ]
                }
        argumentDocs:
            description: (String) The description of the role collection.
            directory_id: (String) The ID of the directory.
            id: (String, Deprecated) The combined unique ID of the role collection as used for import operations.
            name: (String) The name of the role collection.
            role_template_app_id: (String) The name of the referenced template app id.
            role_template_name: (String) The name of the referenced role template.
            roles: (Attributes Set) (see below for nested schema)
        importStatements: []
    btp_directory_role_collection_assignment:
        subCategory: ""
        description: 'Assigns a user to a role collection on a directory level. Tip: You must be assigned to the admin role of the global account or the directory.'
        name: btp_directory_role_collection_assignment
        title: btp_directory_role_collection_assignment Resource - terraform-provider-btp
        examples:
            - name: jd
              manifest: |-
                {
                  "directory_id": "ddfc2206-5f11-48ed-a1ec-29010af70050",
                  "role_collection_name": "Directory Viewer",
                  "user_name": "john.doe@mycompany.com"
                }
            - name: directory_viewer_group
              manifest: |-
                {
                  "directory_id": "ddfc2206-5f11-48ed-a1ec-29010af70050",
                  "group_name": "directory-viewer-group",
                  "role_collection_name": "Directory Viewer"
                }
        argumentDocs:
            attribute_name: (String) The name of the attribute to assign.
            attribute_value: (String) The value of the attribute to assign.
            directory_id: (String) The ID of the directory.
            group_name: (String) The name of the group to assign.
            id: (String, Deprecated) The combined unique ID of the role collection.
            origin: (String) The identity provider that hosts the user or a group. Only needed for custom identity provider.
            role_collection_name: (String) The name of the role collection.
            user_name: (String) The username of the user to assign.
        importStatements: []
    btp_globalaccount_api_credential:
        subCategory: ""
        description: 'Manage API Credentials at the Global Account level. These credentials will enable you to consume the REST APIs of the SAP Authorization and Trust Management service (XSUAA). With the client ID and client secret, or certificate, you can request an access token for the APIs in the targeted global account. Tip: You must be assigned to the global account admin or viewer role. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/entitlements-and-quotas'
        name: btp_globalaccount_api_credential
        title: btp_globalaccount_api_credential Resource - terraform-provider-btp
        examples:
            - name: with-secret
              manifest: |-
                {
                  "name": "globalaccount-api-credential-with-secret",
                  "read_only": false
                }
            - name: with-certificate
              manifest: |-
                {
                  "certificate_passed": "${data.external.values.result[\"certificate\"]}",
                  "name": "globalaccount-api-credential-with-certificate",
                  "read_only": false
                }
              references:
                certificate_passed: data.external.values.result["certificate"]
            - name: read-only
              manifest: |-
                {
                  "name": "read-only-globalaccount-api-credential",
                  "read_only": true
                }
        argumentDocs:
            api_url: (String) The URL to be used to make the API calls.
            certificate_passed: (String) If the user prefers to use a certificate, they must provide the certificate value in PEM format "----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----".
            certificate_received: (String) The certificate that is computed based on the one passed by the user.
            client_id: (String) A unique ID associated with the API credential.
            client_secret: (String) If the certificate is omitted, then a unique secret is generated for the API credential.
            credential_type: (String) The supported credential types are Secrets (Default) or Certificates.
            globalaccount_id: (String) The ID of the globalaccount.
            key: (String) RSA key generated if the API credential is created with a certificate.
            name: (String) The name for the API credential.
            read_only: (Boolean) Access restriction placed on the API credential. If set to true, the resource has only read-only access. Note that if a read-only credential is deleted, it will take a while to reflect in the global account.
            token_url: (String) The URL to be used to fetch the access token to make use of the XSUAA REST APIs.
        importStatements: []
    btp_globalaccount_resource_provider:
        subCategory: ""
        description: 'Creates a resource provider instance to allow your global account to connect to your provider account on a non-SAP cloud vendor. Through this channel, you can consume remote service resources that you already own and are supported by SAP BTP. For example, if you are subscribed to Amazon Web Services (AWS) and have already purchased services, such as PostgreSQL, you can register the vendor as a resource provider in SAP BTP and consume this service across your subaccounts together with other services offered by SAP. The use of this functionality is subject to the availability of the supported non-SAP cloud vendors in your country/region. Tips: You must be assigned to the global account admin role.You can create more than one instance of a given resource provider, each with its unique configuration properties. In such cases, the display name and technical name should be descriptive enough so that you and developers can easily differentiate between each instance.After you configure a new resource provider instance, its supported services are added as entitlements in your global account. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/managing-resource-providers'
        name: btp_globalaccount_resource_provider
        title: btp_globalaccount_resource_provider Resource - terraform-provider-btp
        examples:
            - name: azure
              manifest: |-
                {
                  "id": "my_azure_provider",
                  "parameters": "${jsonencode({\n    region              = \"westeurope\"\n    client_id           = \"AZURECLIENTID\"\n    client_secret       = \"AZURECLIENTSECRET\"\n    tenant_id           = \"42x7676x-f455-423x-82x6-xx2d99791xx7\"\n    subscription_id     = \"x1x9567x-8560-44xx-x4fx-741xx0x08x58\"\n    resource_group_name = \"rg-landscape-azure-example\"\n  })}",
                  "resource_provider": "AZURE"
                }
            - name: aws
              manifest: |-
                {
                  "id": "my_aws_provider",
                  "parameters": "${jsonencode({\n    access_key_id     = \"AWSACCESSKEY\"\n    secret_access_key = \"AWSSECRETKEY\"\n    vpc_id            = \"vpc-test\"\n    region            = \"eu-central-1\"\n  })}",
                  "resource_provider": "AWS"
                }
        argumentDocs:
            AWS: |-
                | Amazon Web Services |
                | AZURE | Microsoft Azure |
            configuration: (String, Sensitive) The configuration properties for the resource provider as required by the vendor.
            description: (String) The description of the resource provider.
            display_name: (String) The descriptive name of the resource provider.
            id: (String, Deprecated) The unique technical name of the resource provider.
            provider_type: '(String) The cloud vendor from which to consume services through your subscribed account. Possible values are:'
            technical_name: (String) The unique technical name of the resource provider.
        importStatements: []
    btp_globalaccount_role:
        subCategory: ""
        description: 'Creates a role in a global account. Tip: You must be assigned to the admin role of the global account. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts'
        name: btp_globalaccount_role
        title: btp_globalaccount_role Resource - terraform-provider-btp
        examples:
            - name: xsuaa_admin
              manifest: |-
                {
                  "app_id": "xsuaa!t1",
                  "name": "My Role",
                  "role_template_name": "xsuaa_admin"
                }
        argumentDocs:
            app_id: (String) The ID of the xsuaa application.
            description: (String) The role description.
            name: (String) The name of the role.
            read_only: (Boolean) Shows whether the role can be modified or not.
            role_template_name: (String) The name of the role template.
        importStatements: []
    btp_globalaccount_role_collection:
        subCategory: ""
        description: 'Creates a role collection in a global account. Tip: You must be assigned to the admin role of the global account. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts'
        name: btp_globalaccount_role_collection
        title: btp_globalaccount_role_collection Resource - terraform-provider-btp
        examples:
            - name: my_collection
              manifest: |-
                {
                  "description": "A description of what the role collection is supposed to do.",
                  "name": "My own role collection",
                  "roles": [
                    {
                      "name": "Global Account Admin",
                      "role_template_app_id": "cis-central!b13",
                      "role_template_name": "GlobalAccount_Admin"
                    }
                  ]
                }
        argumentDocs:
            description: (String) The description of the role collection.
            id: (String, Deprecated) The ID of the role collection.
            name: (String) The name of the role collection.
            role_template_app_id: (String) The name of the referenced template app id.
            role_template_name: (String) The name of the referenced role template.
            roles: (Attributes Set) (see below for nested schema)
        importStatements: []
    btp_globalaccount_role_collection_assignment:
        subCategory: ""
        description: 'Assigns a user or a group to a role collection on global account level. Tip: You must be assigned to the admin role of the global account.'
        name: btp_globalaccount_role_collection_assignment
        title: btp_globalaccount_role_collection_assignment Resource - terraform-provider-btp
        examples:
            - name: jd
              manifest: |-
                {
                  "role_collection_name": "Global Account Viewer",
                  "user_name": "john.doe@mycompany.com"
                }
            - name: globalaccount_viewer_group
              manifest: |-
                {
                  "group_name": "globalaccount-viewer-group",
                  "role_collection_name": "Global Account Viewer"
                }
        argumentDocs:
            attribute_name: (String) The name of the attribute to assign.
            attribute_value: (String) The value of the attribute to assign.
            group_name: (String) The name of the group to assign.
            id: (String, Deprecated) The combined unique ID of the role collection.
            origin: (String) The identity provider that hosts the user or group. Only needed for custom identity provider.
            role_collection_name: (String) The name of the role collection.
            user_name: (String) The name of the user to assign.
        importStatements: []
    btp_globalaccount_security_settings:
        subCategory: ""
        description: 'Sets the security settings of a global account. Tip: You must be assigned to the admin role of the global account. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/configure-trusted-domains-for-sap-authorization-and-trust-management-service https://help.sap.com/docs/btp/sap-business-technology-platform/configure-token-policy-for-sap-authorization-and-trust-management-service'
        name: btp_globalaccount_security_settings
        title: btp_globalaccount_security_settings Resource - terraform-provider-btp
        examples:
            - name: this
              manifest: |-
                {
                  "access_token_validity": 3600,
                  "custom_email_domains": [
                    "yourdomain.test"
                  ],
                  "default_identity_provider": "sap.custom",
                  "iframe_domains": [
                    "https://yourdomain.test"
                  ],
                  "refresh_token_validity": 3600,
                  "treat_users_with_same_email_as_same_user": true
                }
        argumentDocs:
            access_token_validity: (Number) The validity of the access token.
            custom_email_domains: (Set of String) Set of domains that are allowed to be used for user authentication.
            default_identity_provider: (String) The global account's default identity provider for platform users. Used to log on to platform tools such as SAP BTP cockpit or the btp CLI.
            id: (String, Deprecated) The ID of the security settings used for import operations.
            iframe_domains: (String) The new domains of the iframe. Enter as string. To provide multiple domains, separate them by spaces.
            refresh_token_validity: (Number) The validity of the refresh token.
            treat_users_with_same_email_as_same_user: (Boolean) If set to true, users with the same email are treated as same users.
        importStatements: []
    btp_globalaccount_trust_configuration:
        subCategory: ""
        description: 'Establishes trust from a global account to an Identity Authentication tenant. Tip: You must be assigned to the admin role of the global account. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers'
        name: btp_globalaccount_trust_configuration
        title: btp_globalaccount_trust_configuration Resource - terraform-provider-btp
        examples:
            - name: simple
              manifest: |-
                {
                  "identity_provider": "terraformint.accounts400.ondemand.com"
                }
            - name: fully_customized
              manifest: |-
                {
                  "description": "my-description",
                  "identity_provider": "terraformint.accounts400.ondemand.com",
                  "name": "my-name",
                  "origin": "my-own-origin-platform"
                }
        argumentDocs:
            description: (String) Description of the trust configuration.
            domain: (String) The tenant's domain which should be used for user logon.
            id: (String, Deprecated) The origin of the identity provider.
            identity_provider: (String) The name of the Identity Authentication tenant that you want to connect to the global account.
            name: (String) The display name of the trust configuration.
            origin: (String) The origin of the identity provider.
            protocol: (String) The protocol used to establish trust with the identity provider.
            read_only: (Boolean) Shows whether the trust configuration can be modified.
            status: (String) Determines whether the identity provider is currently 'active' or 'inactive'.
            type: (String) The trust type.
        importStatements: []
    btp_subaccount:
        subCategory: ""
        description: 'Creates a subaccount in a global account or directory. Tip: You must be assigned admin role of the global account or directory. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/account-model'
        name: btp_subaccount
        title: btp_subaccount Resource - terraform-provider-btp
        examples:
            - name: my_project
              manifest: |-
                {
                  "name": "My Project",
                  "region": "eu30",
                  "subdomain": "my-project"
                }
            - name: my_project_on_azure
              manifest: |-
                {
                  "for_each": "${{ for dc in data.btp_regions.all.values : dc.region =\u003e dc if dc.environment == \"cloudfoundry\" \u0026\u0026 dc.iaas_provider == \"AZURE\" }}",
                  "name": "My CF Project (${each.key})",
                  "region": "${each.key}",
                  "subdomain": "my-project-${each.key}"
                }
              references:
                region: each.key
        argumentDocs:
            OK: |-
                | The CRUD operation or series of operations completed successfully. |
                | STARTED | CRUD operation on the subaccount has started. |
                | CANCELED | The operation or processing was canceled by the operator. |
                | PROCESSING | A series of operations related to the subaccount are in progress. |
                | PROCESSING_FAILED | The processing operations failed. |
                | CREATING | Creating the subaccount is in progress. |
                | CREATION_FAILED | The creation operation failed, and the subaccount was not created or was created but cannot be used. |
                | UPDATING | Updating the subaccount is in progress. |
                | UPDATE_FAILED | The update operation failed, and the subaccount was not updated. |
                | UPDATE_DIRECTORY_TYPE_FAILED | The update of the directory type failed. |
                | UPDATE_ACCOUNT_TYPE_FAILED | The update of the account type failed. |
                | DELETING | Deleting the subaccount is in progress. |
                | DELETION_FAILED | The deletion of the subaccount failed, and the subaccount was not deleted. |
                | MOVING | Moving the subaccount is in progress. |
                | MOVE_FAILED | The moving of the subaccount failed. |
                | MOVING_TO_OTHER_GA | Moving the subaccount to another global account is in progress. |
                | MOVE_TO_OTHER_GA_FAILED | Moving the subaccount to another global account failed. |
                | PENDING_REVIEW | The processing operation has been stopped for reviewing and can be restarted by the operator. |
                | MIGRATING | Migrating the subaccount from Neo to Cloud Foundry. |
                | MIGRATED | The migration of the subaccount completed. |
                | MIGRATION_FAILED | The migration of the subaccount failed and the subaccount was not migrated. |
                | ROLLBACK_MIGRATION_PROCESSING | The migration of the subaccount was rolled back and the subaccount is not migrated. |
                | SUSPENSION_FAILED | The suspension operations failed. |
            UNSET: |-
                | Global account or subaccount admin has not set the production-relevancy flag (default value). |
                | NOT_USED_FOR_PRODUCTION | The subaccount is not used for production purposes. |
                | USED_FOR_PRODUCTION | The subaccount is used for production purposes. |
            beta_enabled: (Boolean) Shows whether the subaccount can use beta services and applications.
            created_by: (String) The details of the user that created the subaccount.
            created_date: (String) The date and time when the resource was created in RFC3339 format.
            description: (String) A description of the subaccount for customer-facing UIs.
            id: (String) The ID of the subaccount.
            labels: (Map of Set of String) The set of words or phrases assigned to the subaccount.
            last_modified: (String) The date and time when the resource was last modified in RFC3339 format.
            name: (String) A descriptive name of the subaccount for customer-facing UIs.
            parent_features: (Set of String) The features of parent entity of the subaccount.
            parent_id: (String) The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.
            region: (String) The region in which the subaccount was created.
            state: '(String) The current state of the subaccount. Possible values are:'
            subdomain: (String) The subdomain that becomes part of the path used to access the authorization tenant of the subaccount. Must be unique within the defined region and cannot be changed after the subaccount has been created.
            usage: '(String) Shows whether the subaccount is used for production purposes. This flag can help your cloud operator to take appropriate action when handling incidents that are related to mission-critical accounts in production systems. Do not apply for subaccounts that are used for nonproduction purposes, such as development, testing, and demos. Applying this setting this does not modify the subaccount. Possible values are:'
        importStatements: []
    btp_subaccount_api_credential:
        subCategory: ""
        description: 'Manage API Credentials at the Subaccount level. These credentials will enable you to consume the REST APIs of the SAP Authorization and Trust Management service (XSUAA). With the client ID and client secret, or certificate, you can request an access token for the APIs in the targeted subaccount. Tip: You must be assigned to the subaccount admin or viewer role. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/entitlements-and-quotas'
        name: btp_subaccount_api_credential
        title: btp_subaccount_api_credential Resource - terraform-provider-btp
        examples:
            - name: with-secret
              manifest: |-
                {
                  "name": "subaccount-api-credential-with-secret",
                  "read_only": false,
                  "subaccount_id": "77395f6a-a601-4c9e-8cd0-c1fcefc7f60f"
                }
            - name: with-certificate
              manifest: |-
                {
                  "certificate_passed": "${data.external.values.result[\"certificate\"]}",
                  "name": "subaccount-api-credential-with-certificate",
                  "read_only": false,
                  "subaccount_id": "77395f6a-a601-4c9e-8cd0-c1fcefc7f60f"
                }
              references:
                certificate_passed: data.external.values.result["certificate"]
            - name: read-only
              manifest: |-
                {
                  "name": "read-only-subaccount-api-credential",
                  "read_only": true,
                  "subaccount_id": "77395f6a-a601-4c9e-8cd0-c1fcefc7f60f"
                }
        argumentDocs:
            api_url: (String) The URL to be used to make the API calls.
            certificate_passed: (String) If the user prefers to use a certificate, they must provide the certificate value in PEM format "----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----".
            certificate_received: (String) The certificate that is computed based on the one passed by the user.
            client_id: (String) A unique ID associated with the API credential.
            client_secret: (String) If the certificate is omitted, then a unique secret is generated for the API credential.
            credential_type: (String) The supported credential types are Secrets (Default) or Certificates.
            key: (String) RSA key generated if the API credential is created with a certificate.
            name: (String) The name for the API credential.
            read_only: (Boolean) Access restriction placed on the API credential. If set to true, the resource has only read-only access.
            subaccount_id: (String) The ID of the subaccount.
            token_url: (String) The URL to be used to fetch the access token to make use of the XSUAA REST APIs.
        importStatements: []
    btp_subaccount_entitlement:
        subCategory: ""
        description: 'Assigns the entitlement plan of a service, multitenant application, or environment, to a subaccount. Note that some environments, such as Cloud Foundry, are available by default to all global accounts and their subaccounts, and therefore are not made available as entitlements. Tip: You must be assigned to the admin role of the global account. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/entitlements-and-quotas'
        name: btp_subaccount_entitlement
        title: btp_subaccount_entitlement Resource - terraform-provider-btp
        examples:
            - name: alert_notification_service
              manifest: |-
                {
                  "plan_name": "free",
                  "service_name": "alert-notification",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
            - name: uas_reporting
              manifest: |-
                {
                  "amount": 1,
                  "plan_name": "reporting-directory",
                  "service_name": "uas",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
        argumentDocs:
            OK: |-
                | The CRUD operation or series of operations completed successfully. |
                | STARTED | The processing operation started |
                | PROCESSING | The processing operation is in progress |
                | PROCESSING_FAILED | The processing operation failed |
            PLATFORM: |-
                |  A service required for using a specific platform; for example, Application Runtime is required for the Cloud Foundry platform. |
                | SERVICE | A commercial or technical service. that has a numeric quota (amount) when entitled or assigned to a resource. When assigning entitlements of this type, use the 'amount' option. |
                | ELASTIC_SERVICE | A commercial or technical service that has no numeric quota (amount) when entitled or assigned to a resource. Generally this type of service can be as many times as needed when enabled, but may in some cases be restricted by the service owner. |
                | ELASTIC_LIMITED | An elastic service that can be enabled for only one subaccount per global account. |
                | APPLICATION | A multitenant application to which consumers can subscribe. As opposed to applications defined as a 'QUOTA_BASED_APPLICATION', these applications do not have a numeric quota and are simply enabled or disabled as entitlements per subaccount. |
                | QUOTA_BASED_APPLICATION | A multitenant application to which consumers can subscribe. As opposed to applications defined as 'APPLICATION', these applications have an numeric quota that limits consumer usage of the subscribed application per subaccount. |
                | ENVIRONMENT |  An environment service; for example, Cloud Foundry. |
            amount: (Number) The quota assigned to the subaccount.
            category: '(String) The current state of the entitlement. Possible values are:'
            created_date: (String) The date and time when the resource was created in RFC3339 format.
            id: (String) The ID of the entitled service plan.
            last_modified: (String) The date and time when the resource was last modified in RFC3339 format.
            plan_id: (String) The ID of the entitled service plan.
            plan_name: (String) The name of the entitled service plan.
            service_name: (String) The name of the entitled service.
            state: '(String) The current state of the entitlement. Possible values are:'
            subaccount_id: (String) The ID of the subaccount.
        importStatements: []
    btp_subaccount_environment_instance:
        subCategory: ""
        description: 'Creates an environment instance, such as a Cloud Foundry org, in a subaccount. Tips: You must be assigned to the admin role of the subaccount.Quota-based environments, such as Kyma, must first be assigned as entitlements to the subaccount. Further documentation: Cloud Foundry: https://help.sap.com/docs/btp/sap-business-technology-platform/org-management-using-sap-btp-command-line-interface-btp-cliKyma: https://help.sap.com/docs/btp/sap-business-technology-platform/available-plans-in-kyma-environmentConcept: https://help.sap.com/docs/btp/sap-business-technology-platform/environments'
        name: btp_subaccount_environment_instance
        title: btp_subaccount_environment_instance Resource - terraform-provider-btp
        examples:
            - name: cloudfoundry
              manifest: |-
                {
                  "environment_type": "cloudfoundry",
                  "name": "my-cf-environment",
                  "parameters": "${jsonencode({\n    instance_name = \"my-cf-org-name\"\n  })}",
                  "plan_name": "standard",
                  "service_name": "cloudfoundry",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
            - name: cloudfoundry
              manifest: |-
                {
                  "environment_type": "cloudfoundry",
                  "name": "my-cf-environment",
                  "parameters": "${jsonencode({\n    instance_name = \"my-cf-org-name\"\n  })}",
                  "plan_name": "standard",
                  "service_name": "cloudfoundry",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
                  "timeouts": {
                    "create": "1h",
                    "delete": "30m",
                    "update": "35m"
                  }
                }
            - name: cloudfoundry
              manifest: |-
                {
                  "environment_type": "cloudfoundry",
                  "landscape_label": "cf-us10",
                  "name": "my-cf-environment",
                  "parameters": "${jsonencode({\n    instance_name = \"my-cf-org-name\"\n  })}",
                  "plan_name": "standard",
                  "service_name": "cloudfoundry",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
            - name: kyma
              manifest: |-
                {
                  "environment_type": "kyma",
                  "name": "my-kyma-environment",
                  "parameters": "${jsonencode({\n    name          = \"my-kyma-environment\"\n    region        = \"us-east-1\"\n    machineType   = \"mx5.xlarge\" #smallest option\n    autoScalerMin = 3\n    autoScalerMax = 20\n  })}",
                  "plan_name": "aws",
                  "service_name": "kymaruntime",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
                  "timeouts": {
                    "create": "1h",
                    "delete": "1h",
                    "update": "35m"
                  }
                }
        argumentDocs:
            OK: |-
                | The CRUD operation or series of operations completed successfully. |
                | CREATING | Creating of the environment instance is in progress. |
                | CREATION_FAILED | The creation of the environment instance failed, and the environment instance was not created or was created but cannot be used. |
                | UPDATING | Updating of the environment instance is in progress. |
                | UPDATE_FAILED | The update of the environment instance failed, and  the environment instance was not updated. |
                | DELETING | Deleting of the environment instance is in progress. |
                | DELETION_FAILED | The deletion of the environment instance failed, and the environment instance was not deleted. |
            Provision: |-
                | The environment instance is created. |
                | Update | The environment instance is changed. |
                | Deprovision | The environment instance is deleted. |
            broker_id: (String) The ID of the associated environment broker.
            create: (String) Timeout for creating the environment instance.
            created_date: (String) The date and time when the resource was created in RFC3339 format.
            custom_labels: (Map of Set of String) The set of words or phrases assigned to the environment instance.
            dashboard_url: (String) The URL of the service dashboard, which is a web-based management user interface for the service instances.
            delete: (String) Timeout for deleting the environment instance.
            description: (String) The description of the environment instance.
            environment_type: (String) The type of the environment instance that is used.
            id: (String) The ID of the environment instance.
            labels: (String) The Broker-specified key-value pairs that specify attributes of an environment instance.
            landscape_label: (String) The name of the landscape within the logged in region on which the environment instance is created.
            last_modified: (String) The date and time when the resource was last modified in RFC3339 format.
            name: (String) The name of the environment instance.
            operation: (String) An identifier that represents the last operation. This ID is returned by the environment brokers.
            parameters: (String) The configuration parameters for the environment instance.
            plan_id: (String) The ID of the service plan for the environment instance in the corresponding service broker's catalog.
            plan_name: (String) The name of the service plan for the environment instance in the corresponding service broker's catalog.
            platform_id: (String) The ID of the platform for the environment instance in the corresponding service broker's catalog.
            service_id: (String) The ID of the service for the environment instance in the corresponding service broker's catalog.
            service_name: (String) The name of the service for the environment instance in the corresponding service broker's catalog.
            state: '(String) The current state of the environment instance. Possible values are:'
            subaccount_id: (String) The ID of the subaccount.
            tenant_id: (String) The ID of the tenant that owns the environment instance.
            timeouts: (Attributes) (see below for nested schema)
            type: '(String) The last provisioning operation on the environment instance. Possible values are:'
            update: (String) Timeout for updating the environment instance.
        importStatements: []
    btp_subaccount_role:
        subCategory: ""
        description: 'Creates a role in a subaccount. Tip: You must be assigned to the admin role of the subaccount. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts'
        name: btp_subaccount_role
        title: btp_subaccount_role Resource - terraform-provider-btp
        examples:
            - name: xsuaa_auditor
              manifest: |-
                {
                  "app_id": "xsuaa!t1",
                  "name": "XSUAA Auditor",
                  "role_template_name": "xsuaa_auditor",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
        argumentDocs:
            app_id: (String) The ID of the xsuaa application.
            description: (String) The role description.
            id: (String, Deprecated) The combined unique ID of the role.
            name: (String) The name of the role.
            read_only: (Boolean) Shows whether the role can be modified or not.
            role_template_name: (String) The name of the role template.
            subaccount_id: (String) The ID of the subaccount.
        importStatements: []
    btp_subaccount_role_collection:
        subCategory: ""
        description: 'Creates a role collection in a subaccount. Tip You must be assigned to the admin role of the subaccount. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts'
        name: btp_subaccount_role_collection
        title: btp_subaccount_role_collection Resource - terraform-provider-btp
        examples:
            - name: my_collection
              manifest: |-
                {
                  "description": "A description of what the role collection is supposed to do.",
                  "name": "My own role collection",
                  "roles": [
                    {
                      "name": "Subaccount Admin",
                      "role_template_app_id": "cis-local!b2",
                      "role_template_name": "Subaccount_Admin"
                    }
                  ],
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
        argumentDocs:
            description: (String) The description of the role collection.
            id: (String, Deprecated) The combined unique ID of the role collection as used for import operations.
            name: (String) The name of the role collection.
            role_template_app_id: (String) The name of the referenced template app id.
            role_template_name: (String) The name of the referenced role template.
            roles: (Attributes Set) (see below for nested schema)
            subaccount_id: (String) The ID of the subaccount.
        importStatements: []
    btp_subaccount_role_collection_assignment:
        subCategory: ""
        description: 'Assigns a user to a role collection on a subaccount level. Tip: You must be assigned to the admin role of the subaccount.'
        name: btp_subaccount_role_collection_assignment
        title: btp_subaccount_role_collection_assignment Resource - terraform-provider-btp
        examples:
            - name: jd
              manifest: |-
                {
                  "role_collection_name": "Subaccount Viewer",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
                  "user_name": "john.doe@mycompany.com"
                }
            - name: subaccount_viewer_group
              manifest: |-
                {
                  "group_name": "subaccount-viewer-group",
                  "role_collection_name": "Subaccount Viewer",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
        argumentDocs:
            attribute_name: (String) The name of the attribute to assign.
            attribute_value: (String) The value of the attribute to assign.
            group_name: (String) The name of the group to assign.
            id: (String, Deprecated) The combined unique ID of the role collection.
            origin: (String) The identity provider that hosts the user or a group. Only needed for custom identity provider.
            role_collection_name: (String) The name of the role collection.
            subaccount_id: (String) The ID of the subaccount.
            user_name: (String) The username of the user to assign.
        importStatements: []
    btp_subaccount_security_settings:
        subCategory: ""
        description: 'Sets the security settings of a subaccount. Tip: You must be assigned to the admin role of the subaccount. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/configure-trusted-domains-for-sap-authorization-and-trust-management-service https://help.sap.com/docs/btp/sap-business-technology-platform/configure-token-policy-for-sap-authorization-and-trust-management-service'
        name: btp_subaccount_security_settings
        title: btp_subaccount_security_settings Resource - terraform-provider-btp
        examples:
            - name: sec_setting
              manifest: |-
                {
                  "access_token_validity": 3600,
                  "custom_email_domains": [
                    "yourdomain.test"
                  ],
                  "default_identity_provider": "sap.custom",
                  "iframe_domains": "https://yourdomain.test",
                  "refresh_token_validity": 3600,
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
                  "treat_users_with_same_email_as_same_user": true
                }
        argumentDocs:
            access_token_validity: (Number) The validity of the access token.
            custom_email_domains: (Set of String) Set of domains that are allowed to be used for user authentication.
            default_identity_provider: (String) The subaccount's default identity provider for business application users.
            id: (String, Deprecated) The ID of the security settings used for import operations.
            iframe_domains: (String) The new domains of the iframe. Enter as string. To provide multiple domains, separate them by spaces.
            refresh_token_validity: (Number) The validity of the refresh token.
            subaccount_id: (String) The ID of the subaccount.
            treat_users_with_same_email_as_same_user: (Boolean) If set to true, users with the same email are treated as same users.
        importStatements: []
    btp_subaccount_service_binding:
        subCategory: ""
        description: 'Creates a service binding, i.e. generates access details to consume a service. Tip: You must be assigned to the admin or the service administrator role of the subaccount.'
        name: btp_subaccount_service_binding
        title: btp_subaccount_service_binding Resource - terraform-provider-btp
        examples:
            - name: my_binding
              manifest: |-
                {
                  "name": "my binding",
                  "service_instance_id": "8911491d-0e1d-425d-a233-785512602d6f",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
            - name: my_parameterized_binding
              manifest: |-
                {
                  "name": "my parameterized binding",
                  "parameters": "${jsonencode({\n    param_a = \"\"\n    param_b = \"\"\n  })}",
                  "service_instance_id": "8911491d-0e1d-425d-a233-785512602d6f",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
        argumentDocs:
            bind_resource: (Map of String) Contains the resources associated with the binding.
            context: (String) The contextual data for the resource.
            created_date: (String) The date and time when the resource was created in RFC3339 format.
            credentials: (String, Sensitive) The credentials to access the binding.
            id: (String) The ID of the service binding.
            in progress: |-
                | The operation or processing is in progress |
                | failed | The operation or processing failed |
                | succeeded | The operation or processing succeeded |
            labels: (Map of Set of String) The set of words or phrases assigned to the service binding.
            last_modified: (String) The date and time when the resource was last modified in RFC3339 format.
            name: (String) The name of the service binding.
            parameters: (String) The parameters of the service binding as a valid JSON object.
            ready: (Boolean) Shows whether the service binding is ready.
            service_instance_id: (String) The ID of the service instance associated with the binding.
            state: '(String) The current state of the service binding. Possible values are:'
            subaccount_id: (String) The ID of the subaccount.
        importStatements: []
    btp_subaccount_service_broker:
        subCategory: ""
        description: 'Registers a service service broker in a subaccount. Tip: You must be assigned to the admin role of the subaccount.'
        name: btp_subaccount_service_broker
        title: btp_subaccount_service_broker Resource - terraform-provider-btp
        examples:
            - name: my_broker
              manifest: |-
                {
                  "description": "Service broker for provisioning example services.",
                  "name": "my-broker",
                  "password": "platform_password",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
                  "url": "https://my.broker.com",
                  "username": "platform_user"
                }
        argumentDocs:
            created_date: (String) The date and time when the resource was created in RFC3339 format.
            description: (String) The description of the service broker.
            id: (String) The ID of the service broker.
            last_modified: (String) The date and time when the resource was last modified in RFC3339 format.
            name: (String) The name of the service broker.
            password: (String, Sensitive) The password for basic authentication against the service broker.
            ready: (Boolean) Shows whether the service broker is ready.
            subaccount_id: (String) The ID of the subaccount.
            url: (String) The URL of the service broker.
            username: (String) The username for basic authentication against the service broker.
        importStatements: []
    btp_subaccount_service_instance:
        subCategory: ""
        description: 'Creates a service instance in a subaccount. Tip: You must be assigned to the admin or the service administrator role of the subaccount.'
        name: btp_subaccount_service_instance
        title: btp_subaccount_service_instance Resource - terraform-provider-btp
        examples:
            - name: alert_notification_free
              manifest: |-
                {
                  "name": "my-alert-notification-instance-new",
                  "serviceplan_id": "b50d1b0b-2059-4f21-a014-2ea87752eb48",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
            - name: xsuaa_application
              manifest: |-
                {
                  "name": "my-application",
                  "parameters": "${jsonencode({\n    xsappname   = \"my-application\"\n    tenant-mode = \"dedicated\"\n  })}",
                  "serviceplan_id": "bd5e893f-81dd-4d10-8343-e02975e8ecd8",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
            - name: alert_notification_free
              manifest: |-
                {
                  "name": "my-alert-notification-instance-new",
                  "serviceplan_id": "b50d1b0b-2059-4f21-a014-2ea87752eb48",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
                  "timeouts": {
                    "create": "25m",
                    "delete": "15m",
                    "update": "15m"
                  }
                }
            - name: xsuaa_application
              manifest: |-
                {
                  "name": "my-application",
                  "serviceplan_id": "bd5e893f-81dd-4d10-8343-e02975e8ecd8",
                  "shared": true,
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
        argumentDocs:
            context: (String) Contextual data for the resource.
            create: (String) Timeout for creating the service instance.
            created_date: (String) The date and time when the resource was created in RFC3339 format.
            dashboard_url: (String) The URL of the web-based management UI for the service instance.
            delete: (String) Timeout for deleting the service instance.
            id: (String) The ID of the service instance.
            labels: (Map of Set of String) The set of words or phrases assigned to the service instance.
            last_modified: (String) The date and time when the resource was last modified in RFC3339 format.
            name: (String) The name of the service instance.
            parameters: (String, Sensitive) The configuration parameters for the service instance.
            platform_id: (String) The platform ID.
            ready: (Boolean)
            referenced_instance_id: (String) The ID of the instance to which the service instance refers.
            serviceplan_id: (String) The ID of the service plan.
            shared: (Boolean) The configuration parameter for service instance sharing. Ensure that the instance is created with a plan that supports instance sharing.
            state: (String) The current state of the service instance.
            subaccount_id: (String) The ID of the subaccount.
            timeouts: (Attributes) (see below for nested schema)
            update: (String) Timeout for updating the service instance.
            usable: (Boolean) Shows whether the resource can be used.
        importStatements: []
    btp_subaccount_subscription:
        subCategory: ""
        description: 'Subscribes a subaccount to a multitenant application. Custom or partner-developed applications are currently not supported. Tip: You must be assigned to the admin role of the subaccount.'
        name: btp_subaccount_subscription
        title: btp_subaccount_subscription Resource - terraform-provider-btp
        examples:
            - name: workzone
              manifest: |-
                {
                  "app_name": "SAPLaunchpad",
                  "plan_name": "free",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
            - name: workzone
              manifest: |-
                {
                  "app_name": "SAPLaunchpad",
                  "plan_name": "free",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
                  "timeouts": {
                    "create": "25m",
                    "delete": "15m"
                  }
                }
        argumentDocs:
            additional_plan_features: (Set of String) The list of features specific to this plan.
            app_id: (String) The ID returned by XSUAA after the app provider has performed a bind of the multitenant application to an XSUAA service instance.
            app_name: (String) The unique registration name of the deployed multitenant application as defined by the app developer.
            authentication_provider: (String) The authentication provider of the multitenant application. * XSUAA is the SAP Authorization and Trust Management service that defines scopes and permissions for users as tenants at the global account level. * IAS is Identity Authentication Service that defines scopes and permissions for users in zones (common data isolation systems across systems, SaaS tenants, and services).
            category: (String) The technical name of the category defined by the app developer to which the multitenant application is grouped in customer-facing UIs.
            commercial_app_name: (String) The commercial name of the deployed multitenant application as defined by the app developer.
            create: (String) Timeout for creating the subscription.
            created_date: (String) The date and time when the resource was created in RFC3339 format.
            customer_developed: (Boolean) Shows whether the application was developed by a customer. If not, then the application is developed by the cloud operator, such as SAP.
            delete: (String) Timeout for deleting the subscription.
            description: (String) The description of the multitenant application for customer-facing UIs.
            display_name: (String) The display name of the application for customer-facing UIs.
            formation_solution_name: (String) The name of the formations solution associated with the multitenant application.
            globalaccount_id: (String) The ID of the associated global account.
            id: (String) The technical ID generated by XSUAA for a multitenant application when a consumer subscribes to the application.
            labels: (Map of Set of String) The set of words or phrases assigned to the multitenant application subscription.
            last_modified: (String) The date and time when the resource was last modified in RFC3339 format.
            parameters: (String) The parameters of the subscription as a valid JSON object.
            plan_name: (String) The plan name of the application to which the consumer has subscribed.
            platform_entity_id: (String) The ID of the landscape-specific environment.
            quota: (Number) The total amount the subscribed subaccount is entitled to consume.
            state: (String) The subscription state of the subaccount regarding the multitenant application.
            subaccount_id: (String) The ID of the subaccount.
            subscribed_subaccount_id: (String) The ID of the subaccount, which is subscribed to the multitenant application.
            subscribed_tenant_id: (String) The ID of the tenant, which is subscribed to a multitenant application.
            subscription_url: (String) The URL for app users to launch the subscribed application.
            supports_parameters_updates: (Boolean) Specifies whether a consumer, whose subaccount is subscribed to the application, can change its subscriptions parameters.
            supports_plan_updates: (Boolean) Specifies whether a consumer, whose subaccount is subscribed to the application, can change the subscription to a different plan that is available for this application and subaccount.
            tenant_id: (String) The tenant ID of the application provider.
            timeouts: (Attributes) (see below for nested schema)
        importStatements: []
    btp_subaccount_trust_configuration:
        subCategory: ""
        description: 'Establishes trust from a subaccount to an Identity Authentication tenant. Tip: You must be assigned to the admin role of the subaccount. Further documentation: https://help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers'
        name: btp_subaccount_trust_configuration
        title: btp_subaccount_trust_configuration Resource - terraform-provider-btp
        examples:
            - name: simple
              manifest: |-
                {
                  "identity_provider": "terraformint.accounts400.ondemand.com",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
            - name: fully_customized
              manifest: |-
                {
                  "description": "my-description",
                  "identity_provider": "terraformint.accounts400.ondemand.com",
                  "name": "my-name",
                  "subaccount_id": "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"
                }
        argumentDocs:
            auto_create_shadow_users: (Boolean) Determines that any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.
            available_for_user_logon: (Boolean) Determines that end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.
            description: (String) Description of the trust configuration.
            domain: (String) The tenant's domain which should be used for user logon.
            id: (String, Deprecated) The origin of the identity provider.
            identity_provider: (String) The name of the Identity Authentication tenant that you want to connect to the subaccount.
            link_text: (String) Short string that helps users to identify the link for login.
            name: (String) The display name of the trust configuration.
            origin: (String) The origin of the identity provider.
            protocol: (String) The protocol used to establish trust with the identity provider.
            read_only: (Boolean) Shows whether the trust configuration can be modified.
            status: (String) Determines whether the identity provider is currently 'active' or 'inactive'.
            subaccount_id: (String) The ID of the subaccount.
            type: (String) The trust type.
        importStatements: []
