//go:build e2e

// Code initially generated by test-generator.

package e2e

import (
	"context"
	"testing"

	"github.com/crossplane-contrib/xp-testing/pkg/resources"
	meta_api "github.com/sap/crossplane-provider-btp/apis"
	res "sigs.k8s.io/e2e-framework/klient/k8s/resources"
	"sigs.k8s.io/e2e-framework/pkg/envconf"
	"sigs.k8s.io/e2e-framework/pkg/features"
)

func Test_SubaccountServiceBinding_v1alpha1(t *testing.T) {
	t.Skip("skipping test until the feature is implemented")
	t.Parallel()
	resource := resources.NewResourceTestConfig(nil, "SubaccountServiceBinding")

	fB := features.New(resource.Kind)
	fB.WithLabel("kind", resource.Kind)
	fB.Setup(
		func(ctx context.Context, t *testing.T, cfg *envconf.Config) context.Context {
			// as soon as we move to use the xp-testing framework, we can remove this manually setup and use the preconfigured one
			r, _ := res.New(cfg.Client().RESTConfig())
			_ = meta_api.AddToSchmeConcurrent(r.GetScheme())

			t.Logf("Apply %s", resource.Kind)
			resources.ImportResources(ctx, t, cfg, resource.Kind)

			return ctx
		},
	)
	fB.Assess("create", resource.AssessCreate)
	fB.Assess("delete", resource.AssessDelete)
	fB.Teardown(resource.Teardown)

	testenv.TestInParallel(t, fB.Feature())
}
