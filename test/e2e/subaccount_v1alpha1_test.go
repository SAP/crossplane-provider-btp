//go:build e2e

/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code initially generated by test-generator.

package e2e

import (
  "context"
	"testing"

	"github.com/sap/crossplane-provider-btp/apis/account/v1alpha1"
	"github.com/crossplane-contrib/xp-testing/pkg/resources"
	"sigs.k8s.io/e2e-framework/pkg/envconf"
	"sigs.k8s.io/e2e-framework/pkg/features"
)

func Test_TfSubaccount_v1alpha1(t *testing.T) {
	t.Skip("skipping test until the feature is implemented")
	t.Parallel()

	resource := resources.ResourceTestConfig{
		Kind: "TfSubaccount",
		Obj:  &v1alpha1.TfSubaccount{},
	}

	fB := features.New(resource.Kind)
	fB.WithLabel("kind", resource.Kind)
	fB.Setup(
  		func(ctx context.Context, t *testing.T, cfg *envconf.Config) context.Context {
  			// as soon as we move to use the xp-testing framework, we can remove this manually setup and use the preconfigured one
  			r, _ := res.New(cfg.Client().RESTConfig())
  			_ = meta_api.AddToScheme(r.GetScheme())

  			t.Logf("Apply %s", resource.Kind)
  			resources.ImportResources(ctx, t, cfg, resource.Kind)

  			return ctx
  		},
  )
	fB.Assess("create", resource.AssessCreate)
	fB.Assess("delete", resource.AssessDelete)
	fB.Teardown(resource.Teardown)

	testenv.TestInParallel(t, fB.Feature())
}
