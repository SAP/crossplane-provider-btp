/*
Accounts Service

The Accounts service provides REST APIs that are responsible for the management of global accounts, and the creation and management of directories, subaccounts, and their custom properties/tags.  Global accounts represent a business entity and contain contract information, including customer details and purchased entitlements. The global account is the context for billing each customer.  Use the subaccount APIs to structure your global account according to your organization's and project's requirements regarding members, authorizations, and quotas. This service also provides you with APIs for creating and managing directories. While the use of directories is optional, they allow you to further organize and manage your subaccounts according to your specific technical and business needs. The service also lets you manage the custom properties/tags that you associate with your directories and subaccounts. NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the MoveSubaccountsRequestPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MoveSubaccountsRequestPayload{}

// MoveSubaccountsRequestPayload Provide the parameters necessary to obtain information about the source and the target locations.
type MoveSubaccountsRequestPayload struct {
	// The GUID of the current location of the subaccounts. If empty, then GUID of root global account is used.
	SourceGuid string `json:"sourceGuid"`
	// GUIDs of the subaccounts to move.
	SubaccountGuids []string `json:"subaccountGuids"`
	// The GUID of the new location of the subaccounts. To move to a directory, enter the GUID of the directory. To move out of a directory to the root global account, enter the GUID of the global account.
	TargetGuid string `json:"targetGuid"`
	AdditionalProperties map[string]interface{}
}

type _MoveSubaccountsRequestPayload MoveSubaccountsRequestPayload

// NewMoveSubaccountsRequestPayload instantiates a new MoveSubaccountsRequestPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveSubaccountsRequestPayload(sourceGuid string, subaccountGuids []string, targetGuid string) *MoveSubaccountsRequestPayload {
	this := MoveSubaccountsRequestPayload{}
	this.SourceGuid = sourceGuid
	this.SubaccountGuids = subaccountGuids
	this.TargetGuid = targetGuid
	return &this
}

// NewMoveSubaccountsRequestPayloadWithDefaults instantiates a new MoveSubaccountsRequestPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveSubaccountsRequestPayloadWithDefaults() *MoveSubaccountsRequestPayload {
	this := MoveSubaccountsRequestPayload{}
	return &this
}

// GetSourceGuid returns the SourceGuid field value
func (o *MoveSubaccountsRequestPayload) GetSourceGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceGuid
}

// GetSourceGuidOk returns a tuple with the SourceGuid field value
// and a boolean to check if the value has been set.
func (o *MoveSubaccountsRequestPayload) GetSourceGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceGuid, true
}

// SetSourceGuid sets field value
func (o *MoveSubaccountsRequestPayload) SetSourceGuid(v string) {
	o.SourceGuid = v
}

// GetSubaccountGuids returns the SubaccountGuids field value
func (o *MoveSubaccountsRequestPayload) GetSubaccountGuids() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SubaccountGuids
}

// GetSubaccountGuidsOk returns a tuple with the SubaccountGuids field value
// and a boolean to check if the value has been set.
func (o *MoveSubaccountsRequestPayload) GetSubaccountGuidsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubaccountGuids, true
}

// SetSubaccountGuids sets field value
func (o *MoveSubaccountsRequestPayload) SetSubaccountGuids(v []string) {
	o.SubaccountGuids = v
}

// GetTargetGuid returns the TargetGuid field value
func (o *MoveSubaccountsRequestPayload) GetTargetGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetGuid
}

// GetTargetGuidOk returns a tuple with the TargetGuid field value
// and a boolean to check if the value has been set.
func (o *MoveSubaccountsRequestPayload) GetTargetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetGuid, true
}

// SetTargetGuid sets field value
func (o *MoveSubaccountsRequestPayload) SetTargetGuid(v string) {
	o.TargetGuid = v
}

func (o MoveSubaccountsRequestPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MoveSubaccountsRequestPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sourceGuid"] = o.SourceGuid
	toSerialize["subaccountGuids"] = o.SubaccountGuids
	toSerialize["targetGuid"] = o.TargetGuid

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MoveSubaccountsRequestPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sourceGuid",
		"subaccountGuids",
		"targetGuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMoveSubaccountsRequestPayload := _MoveSubaccountsRequestPayload{}

	err = json.Unmarshal(data, &varMoveSubaccountsRequestPayload)

	if err != nil {
		return err
	}

	*o = MoveSubaccountsRequestPayload(varMoveSubaccountsRequestPayload)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "sourceGuid")
		delete(additionalProperties, "subaccountGuids")
		delete(additionalProperties, "targetGuid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMoveSubaccountsRequestPayload struct {
	value *MoveSubaccountsRequestPayload
	isSet bool
}

func (v NullableMoveSubaccountsRequestPayload) Get() *MoveSubaccountsRequestPayload {
	return v.value
}

func (v *NullableMoveSubaccountsRequestPayload) Set(val *MoveSubaccountsRequestPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveSubaccountsRequestPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveSubaccountsRequestPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveSubaccountsRequestPayload(val *MoveSubaccountsRequestPayload) *NullableMoveSubaccountsRequestPayload {
	return &NullableMoveSubaccountsRequestPayload{value: val, isSet: true}
}

func (v NullableMoveSubaccountsRequestPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveSubaccountsRequestPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


