/*
Accounts Service

The Accounts service provides REST APIs that are responsible for the management of global accounts, and the creation and management of directories, subaccounts, and their custom properties/tags.  Global accounts represent a business entity and contain contract information, including customer details and purchased entitlements. The global account is the context for billing each customer.  Use the subaccount APIs to structure your global account according to your organization's and project's requirements regarding members, authorizations, and quotas. This service also provides you with APIs for creating and managing directories. While the use of directories is optional, they allow you to further organize and manage your subaccounts according to your specific technical and business needs. The service also lets you manage the custom properties/tags that you associate with your directories and subaccounts. NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DataResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataResponseObject{}

// DataResponseObject struct for DataResponseObject
type DataResponseObject struct {
	// The response object containing information about the data.
	Values []PropertyDataResponseObject `json:"values,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DataResponseObject DataResponseObject

// NewDataResponseObject instantiates a new DataResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataResponseObject() *DataResponseObject {
	this := DataResponseObject{}
	return &this
}

// NewDataResponseObjectWithDefaults instantiates a new DataResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataResponseObjectWithDefaults() *DataResponseObject {
	this := DataResponseObject{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *DataResponseObject) GetValues() []PropertyDataResponseObject {
	if o == nil || IsNil(o.Values) {
		var ret []PropertyDataResponseObject
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataResponseObject) GetValuesOk() ([]PropertyDataResponseObject, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *DataResponseObject) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []PropertyDataResponseObject and assigns it to the Values field.
func (o *DataResponseObject) SetValues(v []PropertyDataResponseObject) {
	o.Values = v
}

func (o DataResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DataResponseObject) UnmarshalJSON(data []byte) (err error) {
	varDataResponseObject := _DataResponseObject{}

	err = json.Unmarshal(data, &varDataResponseObject)

	if err != nil {
		return err
	}

	*o = DataResponseObject(varDataResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "values")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDataResponseObject struct {
	value *DataResponseObject
	isSet bool
}

func (v NullableDataResponseObject) Get() *DataResponseObject {
	return v.value
}

func (v *NullableDataResponseObject) Set(val *DataResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableDataResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableDataResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataResponseObject(val *DataResponseObject) *NullableDataResponseObject {
	return &NullableDataResponseObject{value: val, isSet: true}
}

func (v NullableDataResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


