/*
Accounts Service

The Accounts service provides REST APIs that are responsible for the management of global accounts, and the creation and management of directories, subaccounts, and their custom properties/tags.  Global accounts represent a business entity and contain contract information, including customer details and purchased entitlements. The global account is the context for billing each customer.  Use the subaccount APIs to structure your global account according to your organization's and project's requirements regarding members, authorizations, and quotas. This service also provides you with APIs for creating and managing directories. While the use of directories is optional, they allow you to further organize and manage your subaccounts according to your specific technical and business needs. The service also lets you manage the custom properties/tags that you associate with your directories and subaccounts. NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the SubaccountResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubaccountResponseObject{}

// SubaccountResponseObject struct for SubaccountResponseObject
type SubaccountResponseObject struct {
	// Whether the subaccount can use beta services and applications.
	BetaEnabled bool `json:"betaEnabled"`
	// Details of the user that created the subaccount.
	CreatedBy *string `json:"createdBy,omitempty"`
	// The date the subaccount was created. Dates and times are in UTC format.
	CreatedDate int64 `json:"createdDate"`
	// (Deprecated) Contains information about the labels assigned to a specified subaccount. This field supports only single values per key and is now replaced by the string array \"labels\", which supports multiple values per key. The \"customProperties\" field returns only the first value of any label key that has multiple values assigned to it.
	// Deprecated
	CustomProperties []PropertyResponseObject `json:"customProperties,omitempty"`
	// A description of the subaccount for customer-facing UIs.
	Description string `json:"description"`
	// A descriptive name of the subaccount for customer-facing UIs.
	DisplayName string `json:"displayName"`
	// The unique ID of the subaccount's global account.
	GlobalAccountGUID string `json:"globalAccountGUID"`
	// Unique ID of the subaccount.
	Guid string `json:"guid"`
	// Contains information about the labels assigned to a specified subaccount. Labels are represented in a JSON array of key-value pairs; each key has up to 10 corresponding values. This field replaces the deprecated \"customProperties\" field, which supports only single values per key.
	Labels *map[string][]string `json:"labels,omitempty"`
	// The date the subaccount was last modified. Dates and times are in UTC format.
	ModifiedDate *int64 `json:"modifiedDate,omitempty"`
	// The features of parent entity of the subaccount.
	ParentFeatures []string `json:"parentFeatures,omitempty"`
	// The GUID of the subaccountâ€™s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the GUID of the global account.
	ParentGUID string `json:"parentGUID"`
	// The region in which the subaccount was created.
	Region string `json:"region"`
	// The current state of the subaccount.
	State string `json:"state"`
	// Information about the state of the subaccount.
	StateMessage *string `json:"stateMessage,omitempty"`
	// The subdomain that becomes part of the path used to access the authorization tenant of the subaccount. Must be unique within the defined region. Use only letters (a-z), digits (0-9), and hyphens (not at the start or end). Maximum length is 63 characters. Cannot be changed after the subaccount has been created.
	Subdomain string `json:"subdomain"`
	// The technical name of the subaccount. Refers to: (1) the platform-based account name for Neo subaccounts, or (2) the account identifier (tenant ID) in XSUAA for multi-environment subaccounts.
	TechnicalName string `json:"technicalName"`
	// Whether the subaccount is used for production purposes. This flag can help your cloud operator to take appropriate action when handling incidents that are related to mission-critical accounts in production systems. Do not apply for subaccounts that are used for non-production purposes, such as development, testing, and demos. Applying this setting this does not modify the subaccount. * <b>UNSET:</b> Global account or subaccount admin has not set the production-relevancy flag. Default value. * <b>NOT_USED_FOR_PRODUCTION:</b> Subaccount is not used for production purposes. * <b>USED_FOR_PRODUCTION:</b> Subaccount is used for production purposes.  
	UsedForProduction string `json:"usedForProduction"`
	AdditionalProperties map[string]interface{}
}

type _SubaccountResponseObject SubaccountResponseObject

// NewSubaccountResponseObject instantiates a new SubaccountResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubaccountResponseObject(betaEnabled bool, createdDate int64, description string, displayName string, globalAccountGUID string, guid string, parentGUID string, region string, state string, subdomain string, technicalName string, usedForProduction string) *SubaccountResponseObject {
	this := SubaccountResponseObject{}
	this.BetaEnabled = betaEnabled
	this.CreatedDate = createdDate
	this.Description = description
	this.DisplayName = displayName
	this.GlobalAccountGUID = globalAccountGUID
	this.Guid = guid
	this.ParentGUID = parentGUID
	this.Region = region
	this.State = state
	this.Subdomain = subdomain
	this.TechnicalName = technicalName
	this.UsedForProduction = usedForProduction
	return &this
}

// NewSubaccountResponseObjectWithDefaults instantiates a new SubaccountResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubaccountResponseObjectWithDefaults() *SubaccountResponseObject {
	this := SubaccountResponseObject{}
	return &this
}

// GetBetaEnabled returns the BetaEnabled field value
func (o *SubaccountResponseObject) GetBetaEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BetaEnabled
}

// GetBetaEnabledOk returns a tuple with the BetaEnabled field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetBetaEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BetaEnabled, true
}

// SetBetaEnabled sets field value
func (o *SubaccountResponseObject) SetBetaEnabled(v bool) {
	o.BetaEnabled = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *SubaccountResponseObject) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *SubaccountResponseObject) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *SubaccountResponseObject) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedDate returns the CreatedDate field value
func (o *SubaccountResponseObject) GetCreatedDate() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetCreatedDateOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedDate, true
}

// SetCreatedDate sets field value
func (o *SubaccountResponseObject) SetCreatedDate(v int64) {
	o.CreatedDate = v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
// Deprecated
func (o *SubaccountResponseObject) GetCustomProperties() []PropertyResponseObject {
	if o == nil || IsNil(o.CustomProperties) {
		var ret []PropertyResponseObject
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *SubaccountResponseObject) GetCustomPropertiesOk() ([]PropertyResponseObject, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *SubaccountResponseObject) HasCustomProperties() bool {
	if o != nil && !IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given []PropertyResponseObject and assigns it to the CustomProperties field.
// Deprecated
func (o *SubaccountResponseObject) SetCustomProperties(v []PropertyResponseObject) {
	o.CustomProperties = v
}

// GetDescription returns the Description field value
func (o *SubaccountResponseObject) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SubaccountResponseObject) SetDescription(v string) {
	o.Description = v
}

// GetDisplayName returns the DisplayName field value
func (o *SubaccountResponseObject) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *SubaccountResponseObject) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetGlobalAccountGUID returns the GlobalAccountGUID field value
func (o *SubaccountResponseObject) GetGlobalAccountGUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GlobalAccountGUID
}

// GetGlobalAccountGUIDOk returns a tuple with the GlobalAccountGUID field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetGlobalAccountGUIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalAccountGUID, true
}

// SetGlobalAccountGUID sets field value
func (o *SubaccountResponseObject) SetGlobalAccountGUID(v string) {
	o.GlobalAccountGUID = v
}

// GetGuid returns the Guid field value
func (o *SubaccountResponseObject) GetGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Guid
}

// GetGuidOk returns a tuple with the Guid field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Guid, true
}

// SetGuid sets field value
func (o *SubaccountResponseObject) SetGuid(v string) {
	o.Guid = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *SubaccountResponseObject) GetLabels() map[string][]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string][]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetLabelsOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *SubaccountResponseObject) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string][]string and assigns it to the Labels field.
func (o *SubaccountResponseObject) SetLabels(v map[string][]string) {
	o.Labels = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *SubaccountResponseObject) GetModifiedDate() int64 {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret int64
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetModifiedDateOk() (*int64, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *SubaccountResponseObject) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given int64 and assigns it to the ModifiedDate field.
func (o *SubaccountResponseObject) SetModifiedDate(v int64) {
	o.ModifiedDate = &v
}

// GetParentFeatures returns the ParentFeatures field value if set, zero value otherwise.
func (o *SubaccountResponseObject) GetParentFeatures() []string {
	if o == nil || IsNil(o.ParentFeatures) {
		var ret []string
		return ret
	}
	return o.ParentFeatures
}

// GetParentFeaturesOk returns a tuple with the ParentFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetParentFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.ParentFeatures) {
		return nil, false
	}
	return o.ParentFeatures, true
}

// HasParentFeatures returns a boolean if a field has been set.
func (o *SubaccountResponseObject) HasParentFeatures() bool {
	if o != nil && !IsNil(o.ParentFeatures) {
		return true
	}

	return false
}

// SetParentFeatures gets a reference to the given []string and assigns it to the ParentFeatures field.
func (o *SubaccountResponseObject) SetParentFeatures(v []string) {
	o.ParentFeatures = v
}

// GetParentGUID returns the ParentGUID field value
func (o *SubaccountResponseObject) GetParentGUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentGUID
}

// GetParentGUIDOk returns a tuple with the ParentGUID field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetParentGUIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentGUID, true
}

// SetParentGUID sets field value
func (o *SubaccountResponseObject) SetParentGUID(v string) {
	o.ParentGUID = v
}

// GetRegion returns the Region field value
func (o *SubaccountResponseObject) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *SubaccountResponseObject) SetRegion(v string) {
	o.Region = v
}

// GetState returns the State field value
func (o *SubaccountResponseObject) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *SubaccountResponseObject) SetState(v string) {
	o.State = v
}

// GetStateMessage returns the StateMessage field value if set, zero value otherwise.
func (o *SubaccountResponseObject) GetStateMessage() string {
	if o == nil || IsNil(o.StateMessage) {
		var ret string
		return ret
	}
	return *o.StateMessage
}

// GetStateMessageOk returns a tuple with the StateMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetStateMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StateMessage) {
		return nil, false
	}
	return o.StateMessage, true
}

// HasStateMessage returns a boolean if a field has been set.
func (o *SubaccountResponseObject) HasStateMessage() bool {
	if o != nil && !IsNil(o.StateMessage) {
		return true
	}

	return false
}

// SetStateMessage gets a reference to the given string and assigns it to the StateMessage field.
func (o *SubaccountResponseObject) SetStateMessage(v string) {
	o.StateMessage = &v
}

// GetSubdomain returns the Subdomain field value
func (o *SubaccountResponseObject) GetSubdomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetSubdomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subdomain, true
}

// SetSubdomain sets field value
func (o *SubaccountResponseObject) SetSubdomain(v string) {
	o.Subdomain = v
}

// GetTechnicalName returns the TechnicalName field value
func (o *SubaccountResponseObject) GetTechnicalName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TechnicalName
}

// GetTechnicalNameOk returns a tuple with the TechnicalName field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetTechnicalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TechnicalName, true
}

// SetTechnicalName sets field value
func (o *SubaccountResponseObject) SetTechnicalName(v string) {
	o.TechnicalName = v
}

// GetUsedForProduction returns the UsedForProduction field value
func (o *SubaccountResponseObject) GetUsedForProduction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UsedForProduction
}

// GetUsedForProductionOk returns a tuple with the UsedForProduction field value
// and a boolean to check if the value has been set.
func (o *SubaccountResponseObject) GetUsedForProductionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UsedForProduction, true
}

// SetUsedForProduction sets field value
func (o *SubaccountResponseObject) SetUsedForProduction(v string) {
	o.UsedForProduction = v
}

func (o SubaccountResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubaccountResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["betaEnabled"] = o.BetaEnabled
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	toSerialize["createdDate"] = o.CreatedDate
	if !IsNil(o.CustomProperties) {
		toSerialize["customProperties"] = o.CustomProperties
	}
	toSerialize["description"] = o.Description
	toSerialize["displayName"] = o.DisplayName
	toSerialize["globalAccountGUID"] = o.GlobalAccountGUID
	toSerialize["guid"] = o.Guid
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ParentFeatures) {
		toSerialize["parentFeatures"] = o.ParentFeatures
	}
	toSerialize["parentGUID"] = o.ParentGUID
	toSerialize["region"] = o.Region
	toSerialize["state"] = o.State
	if !IsNil(o.StateMessage) {
		toSerialize["stateMessage"] = o.StateMessage
	}
	toSerialize["subdomain"] = o.Subdomain
	toSerialize["technicalName"] = o.TechnicalName
	toSerialize["usedForProduction"] = o.UsedForProduction

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SubaccountResponseObject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"betaEnabled",
		"createdDate",
		"description",
		"displayName",
		"globalAccountGUID",
		"guid",
		"parentGUID",
		"region",
		"state",
		"subdomain",
		"technicalName",
		"usedForProduction",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubaccountResponseObject := _SubaccountResponseObject{}

	err = json.Unmarshal(data, &varSubaccountResponseObject)

	if err != nil {
		return err
	}

	*o = SubaccountResponseObject(varSubaccountResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "betaEnabled")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "createdDate")
		delete(additionalProperties, "customProperties")
		delete(additionalProperties, "description")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "globalAccountGUID")
		delete(additionalProperties, "guid")
		delete(additionalProperties, "labels")
		delete(additionalProperties, "modifiedDate")
		delete(additionalProperties, "parentFeatures")
		delete(additionalProperties, "parentGUID")
		delete(additionalProperties, "region")
		delete(additionalProperties, "state")
		delete(additionalProperties, "stateMessage")
		delete(additionalProperties, "subdomain")
		delete(additionalProperties, "technicalName")
		delete(additionalProperties, "usedForProduction")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSubaccountResponseObject struct {
	value *SubaccountResponseObject
	isSet bool
}

func (v NullableSubaccountResponseObject) Get() *SubaccountResponseObject {
	return v.value
}

func (v *NullableSubaccountResponseObject) Set(val *SubaccountResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableSubaccountResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableSubaccountResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubaccountResponseObject(val *SubaccountResponseObject) *NullableSubaccountResponseObject {
	return &NullableSubaccountResponseObject{value: val, isSet: true}
}

func (v NullableSubaccountResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubaccountResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


