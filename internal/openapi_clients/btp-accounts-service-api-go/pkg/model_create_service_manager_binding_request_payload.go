/*
Accounts Service

The Accounts service provides REST APIs that are responsible for the management of global accounts, and the creation and management of directories, subaccounts, and their custom properties/tags.  Global accounts represent a business entity and contain contract information, including customer details and purchased entitlements. The global account is the context for billing each customer.  Use the subaccount APIs to structure your global account according to your organization's and project's requirements regarding members, authorizations, and quotas. This service also provides you with APIs for creating and managing directories. While the use of directories is optional, they allow you to further organize and manage your subaccounts according to your specific technical and business needs. The service also lets you manage the custom properties/tags that you associate with your directories and subaccounts. NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateServiceManagerBindingRequestPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateServiceManagerBindingRequestPayload{}

// CreateServiceManagerBindingRequestPayload Details of the new Service Manager binding.
type CreateServiceManagerBindingRequestPayload struct {
	// Specify the name of the service binding.
	Name string `json:"name"`
	// Service-specific configuration parameters. For example, mTLS authentication-type parameters.
	Parameters map[string]map[string]interface{} `json:"parameters,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateServiceManagerBindingRequestPayload CreateServiceManagerBindingRequestPayload

// NewCreateServiceManagerBindingRequestPayload instantiates a new CreateServiceManagerBindingRequestPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServiceManagerBindingRequestPayload(name string) *CreateServiceManagerBindingRequestPayload {
	this := CreateServiceManagerBindingRequestPayload{}
	this.Name = name
	return &this
}

// NewCreateServiceManagerBindingRequestPayloadWithDefaults instantiates a new CreateServiceManagerBindingRequestPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServiceManagerBindingRequestPayloadWithDefaults() *CreateServiceManagerBindingRequestPayload {
	this := CreateServiceManagerBindingRequestPayload{}
	return &this
}

// GetName returns the Name field value
func (o *CreateServiceManagerBindingRequestPayload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateServiceManagerBindingRequestPayload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateServiceManagerBindingRequestPayload) SetName(v string) {
	o.Name = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *CreateServiceManagerBindingRequestPayload) GetParameters() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceManagerBindingRequestPayload) GetParametersOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Parameters) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *CreateServiceManagerBindingRequestPayload) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]map[string]interface{} and assigns it to the Parameters field.
func (o *CreateServiceManagerBindingRequestPayload) SetParameters(v map[string]map[string]interface{}) {
	o.Parameters = v
}

func (o CreateServiceManagerBindingRequestPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateServiceManagerBindingRequestPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateServiceManagerBindingRequestPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateServiceManagerBindingRequestPayload := _CreateServiceManagerBindingRequestPayload{}

	err = json.Unmarshal(data, &varCreateServiceManagerBindingRequestPayload)

	if err != nil {
		return err
	}

	*o = CreateServiceManagerBindingRequestPayload(varCreateServiceManagerBindingRequestPayload)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "parameters")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateServiceManagerBindingRequestPayload struct {
	value *CreateServiceManagerBindingRequestPayload
	isSet bool
}

func (v NullableCreateServiceManagerBindingRequestPayload) Get() *CreateServiceManagerBindingRequestPayload {
	return v.value
}

func (v *NullableCreateServiceManagerBindingRequestPayload) Set(val *CreateServiceManagerBindingRequestPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServiceManagerBindingRequestPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServiceManagerBindingRequestPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServiceManagerBindingRequestPayload(val *CreateServiceManagerBindingRequestPayload) *NullableCreateServiceManagerBindingRequestPayload {
	return &NullableCreateServiceManagerBindingRequestPayload{value: val, isSet: true}
}

func (v NullableCreateServiceManagerBindingRequestPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServiceManagerBindingRequestPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


