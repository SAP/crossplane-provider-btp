/*
Accounts Service

The Accounts service provides REST APIs that are responsible for the management of global accounts, and the creation and management of directories, subaccounts, and their custom properties/tags.  Global accounts represent a business entity and contain contract information, including customer details and purchased entitlements. The global account is the context for billing each customer.  Use the subaccount APIs to structure your global account according to your organization's and project's requirements regarding members, authorizations, and quotas. This service also provides you with APIs for creating and managing directories. While the use of directories is optional, they allow you to further organize and manage your subaccounts according to your specific technical and business needs. The service also lets you manage the custom properties/tags that you associate with your directories and subaccounts. NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiExceptionResponseObjectError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiExceptionResponseObjectError{}

// ApiExceptionResponseObjectError List of assigned entitlements and their specifications.
type ApiExceptionResponseObjectError struct {
	// the error code.
	Code *float32 `json:"code,omitempty"`
	// in case of incident, please report this correlation id.
	CorrelationID *string `json:"correlationID,omitempty"`
	// error message helping to resolve the issue
	Message *string `json:"message,omitempty"`
	// The susppect.
	Target *string `json:"target,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApiExceptionResponseObjectError ApiExceptionResponseObjectError

// NewApiExceptionResponseObjectError instantiates a new ApiExceptionResponseObjectError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiExceptionResponseObjectError() *ApiExceptionResponseObjectError {
	this := ApiExceptionResponseObjectError{}
	return &this
}

// NewApiExceptionResponseObjectErrorWithDefaults instantiates a new ApiExceptionResponseObjectError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiExceptionResponseObjectErrorWithDefaults() *ApiExceptionResponseObjectError {
	this := ApiExceptionResponseObjectError{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ApiExceptionResponseObjectError) GetCode() float32 {
	if o == nil || IsNil(o.Code) {
		var ret float32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExceptionResponseObjectError) GetCodeOk() (*float32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ApiExceptionResponseObjectError) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given float32 and assigns it to the Code field.
func (o *ApiExceptionResponseObjectError) SetCode(v float32) {
	o.Code = &v
}

// GetCorrelationID returns the CorrelationID field value if set, zero value otherwise.
func (o *ApiExceptionResponseObjectError) GetCorrelationID() string {
	if o == nil || IsNil(o.CorrelationID) {
		var ret string
		return ret
	}
	return *o.CorrelationID
}

// GetCorrelationIDOk returns a tuple with the CorrelationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExceptionResponseObjectError) GetCorrelationIDOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelationID) {
		return nil, false
	}
	return o.CorrelationID, true
}

// HasCorrelationID returns a boolean if a field has been set.
func (o *ApiExceptionResponseObjectError) HasCorrelationID() bool {
	if o != nil && !IsNil(o.CorrelationID) {
		return true
	}

	return false
}

// SetCorrelationID gets a reference to the given string and assigns it to the CorrelationID field.
func (o *ApiExceptionResponseObjectError) SetCorrelationID(v string) {
	o.CorrelationID = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ApiExceptionResponseObjectError) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExceptionResponseObjectError) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ApiExceptionResponseObjectError) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ApiExceptionResponseObjectError) SetMessage(v string) {
	o.Message = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *ApiExceptionResponseObjectError) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExceptionResponseObjectError) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *ApiExceptionResponseObjectError) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *ApiExceptionResponseObjectError) SetTarget(v string) {
	o.Target = &v
}

func (o ApiExceptionResponseObjectError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiExceptionResponseObjectError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.CorrelationID) {
		toSerialize["correlationID"] = o.CorrelationID
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiExceptionResponseObjectError) UnmarshalJSON(data []byte) (err error) {
	varApiExceptionResponseObjectError := _ApiExceptionResponseObjectError{}

	err = json.Unmarshal(data, &varApiExceptionResponseObjectError)

	if err != nil {
		return err
	}

	*o = ApiExceptionResponseObjectError(varApiExceptionResponseObjectError)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "correlationID")
		delete(additionalProperties, "message")
		delete(additionalProperties, "target")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiExceptionResponseObjectError struct {
	value *ApiExceptionResponseObjectError
	isSet bool
}

func (v NullableApiExceptionResponseObjectError) Get() *ApiExceptionResponseObjectError {
	return v.value
}

func (v *NullableApiExceptionResponseObjectError) Set(val *ApiExceptionResponseObjectError) {
	v.value = val
	v.isSet = true
}

func (v NullableApiExceptionResponseObjectError) IsSet() bool {
	return v.isSet
}

func (v *NullableApiExceptionResponseObjectError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiExceptionResponseObjectError(val *ApiExceptionResponseObjectError) *NullableApiExceptionResponseObjectError {
	return &NullableApiExceptionResponseObjectError{value: val, isSet: true}
}

func (v NullableApiExceptionResponseObjectError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiExceptionResponseObjectError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


