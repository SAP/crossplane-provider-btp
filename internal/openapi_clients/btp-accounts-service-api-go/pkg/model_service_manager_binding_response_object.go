/*
Accounts Service

The Accounts service provides REST APIs that are responsible for the management of global accounts, and the creation and management of directories, subaccounts, and their custom properties/tags.  Global accounts represent a business entity and contain contract information, including customer details and purchased entitlements. The global account is the context for billing each customer.  Use the subaccount APIs to structure your global account according to your organization's and project's requirements regarding members, authorizations, and quotas. This service also provides you with APIs for creating and managing directories. While the use of directories is optional, they allow you to further organize and manage your subaccounts according to your specific technical and business needs. The service also lets you manage the custom properties/tags that you associate with your directories and subaccounts. NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceManagerBindingResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceManagerBindingResponseObject{}

// ServiceManagerBindingResponseObject OAuth 2.0 Client Credentials Grant Type to obtain an access token to use the Service Manager APIs in a subaccount context. The example and model are for the basic credentials type.
type ServiceManagerBindingResponseObject struct {
	// A public identifier of the app.
	Clientid *string `json:"clientid,omitempty"`
	// Secret known only to the app and the authorization server.
	Clientsecret *string `json:"clientsecret,omitempty"`
	// The URL of Service Manager APIs to access with the obtained token.
	SmUrl *string `json:"sm_url,omitempty"`
	// The URL to authentication server to get a token to authenticate with Service Manager using the obtained client ID and secret.
	Url *string `json:"url,omitempty"`
	// The name of the xsapp used to get the access token.
	Xsappname *string `json:"xsappname,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceManagerBindingResponseObject ServiceManagerBindingResponseObject

// NewServiceManagerBindingResponseObject instantiates a new ServiceManagerBindingResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceManagerBindingResponseObject() *ServiceManagerBindingResponseObject {
	this := ServiceManagerBindingResponseObject{}
	return &this
}

// NewServiceManagerBindingResponseObjectWithDefaults instantiates a new ServiceManagerBindingResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceManagerBindingResponseObjectWithDefaults() *ServiceManagerBindingResponseObject {
	this := ServiceManagerBindingResponseObject{}
	return &this
}

// GetClientid returns the Clientid field value if set, zero value otherwise.
func (o *ServiceManagerBindingResponseObject) GetClientid() string {
	if o == nil || IsNil(o.Clientid) {
		var ret string
		return ret
	}
	return *o.Clientid
}

// GetClientidOk returns a tuple with the Clientid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingResponseObject) GetClientidOk() (*string, bool) {
	if o == nil || IsNil(o.Clientid) {
		return nil, false
	}
	return o.Clientid, true
}

// HasClientid returns a boolean if a field has been set.
func (o *ServiceManagerBindingResponseObject) HasClientid() bool {
	if o != nil && !IsNil(o.Clientid) {
		return true
	}

	return false
}

// SetClientid gets a reference to the given string and assigns it to the Clientid field.
func (o *ServiceManagerBindingResponseObject) SetClientid(v string) {
	o.Clientid = &v
}

// GetClientsecret returns the Clientsecret field value if set, zero value otherwise.
func (o *ServiceManagerBindingResponseObject) GetClientsecret() string {
	if o == nil || IsNil(o.Clientsecret) {
		var ret string
		return ret
	}
	return *o.Clientsecret
}

// GetClientsecretOk returns a tuple with the Clientsecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingResponseObject) GetClientsecretOk() (*string, bool) {
	if o == nil || IsNil(o.Clientsecret) {
		return nil, false
	}
	return o.Clientsecret, true
}

// HasClientsecret returns a boolean if a field has been set.
func (o *ServiceManagerBindingResponseObject) HasClientsecret() bool {
	if o != nil && !IsNil(o.Clientsecret) {
		return true
	}

	return false
}

// SetClientsecret gets a reference to the given string and assigns it to the Clientsecret field.
func (o *ServiceManagerBindingResponseObject) SetClientsecret(v string) {
	o.Clientsecret = &v
}

// GetSmUrl returns the SmUrl field value if set, zero value otherwise.
func (o *ServiceManagerBindingResponseObject) GetSmUrl() string {
	if o == nil || IsNil(o.SmUrl) {
		var ret string
		return ret
	}
	return *o.SmUrl
}

// GetSmUrlOk returns a tuple with the SmUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingResponseObject) GetSmUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SmUrl) {
		return nil, false
	}
	return o.SmUrl, true
}

// HasSmUrl returns a boolean if a field has been set.
func (o *ServiceManagerBindingResponseObject) HasSmUrl() bool {
	if o != nil && !IsNil(o.SmUrl) {
		return true
	}

	return false
}

// SetSmUrl gets a reference to the given string and assigns it to the SmUrl field.
func (o *ServiceManagerBindingResponseObject) SetSmUrl(v string) {
	o.SmUrl = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ServiceManagerBindingResponseObject) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingResponseObject) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ServiceManagerBindingResponseObject) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ServiceManagerBindingResponseObject) SetUrl(v string) {
	o.Url = &v
}

// GetXsappname returns the Xsappname field value if set, zero value otherwise.
func (o *ServiceManagerBindingResponseObject) GetXsappname() string {
	if o == nil || IsNil(o.Xsappname) {
		var ret string
		return ret
	}
	return *o.Xsappname
}

// GetXsappnameOk returns a tuple with the Xsappname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingResponseObject) GetXsappnameOk() (*string, bool) {
	if o == nil || IsNil(o.Xsappname) {
		return nil, false
	}
	return o.Xsappname, true
}

// HasXsappname returns a boolean if a field has been set.
func (o *ServiceManagerBindingResponseObject) HasXsappname() bool {
	if o != nil && !IsNil(o.Xsappname) {
		return true
	}

	return false
}

// SetXsappname gets a reference to the given string and assigns it to the Xsappname field.
func (o *ServiceManagerBindingResponseObject) SetXsappname(v string) {
	o.Xsappname = &v
}

func (o ServiceManagerBindingResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceManagerBindingResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Clientid) {
		toSerialize["clientid"] = o.Clientid
	}
	if !IsNil(o.Clientsecret) {
		toSerialize["clientsecret"] = o.Clientsecret
	}
	if !IsNil(o.SmUrl) {
		toSerialize["sm_url"] = o.SmUrl
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Xsappname) {
		toSerialize["xsappname"] = o.Xsappname
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceManagerBindingResponseObject) UnmarshalJSON(data []byte) (err error) {
	varServiceManagerBindingResponseObject := _ServiceManagerBindingResponseObject{}

	err = json.Unmarshal(data, &varServiceManagerBindingResponseObject)

	if err != nil {
		return err
	}

	*o = ServiceManagerBindingResponseObject(varServiceManagerBindingResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clientid")
		delete(additionalProperties, "clientsecret")
		delete(additionalProperties, "sm_url")
		delete(additionalProperties, "url")
		delete(additionalProperties, "xsappname")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceManagerBindingResponseObject struct {
	value *ServiceManagerBindingResponseObject
	isSet bool
}

func (v NullableServiceManagerBindingResponseObject) Get() *ServiceManagerBindingResponseObject {
	return v.value
}

func (v *NullableServiceManagerBindingResponseObject) Set(val *ServiceManagerBindingResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceManagerBindingResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceManagerBindingResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceManagerBindingResponseObject(val *ServiceManagerBindingResponseObject) *NullableServiceManagerBindingResponseObject {
	return &NullableServiceManagerBindingResponseObject{value: val, isSet: true}
}

func (v NullableServiceManagerBindingResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceManagerBindingResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


