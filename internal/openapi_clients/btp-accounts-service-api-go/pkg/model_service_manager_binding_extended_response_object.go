/*
Accounts Service

The Accounts service provides REST APIs that are responsible for the management of global accounts, and the creation and management of directories, subaccounts, and their custom properties/tags.  Global accounts represent a business entity and contain contract information, including customer details and purchased entitlements. The global account is the context for billing each customer.  Use the subaccount APIs to structure your global account according to your organization's and project's requirements regarding members, authorizations, and quotas. This service also provides you with APIs for creating and managing directories. While the use of directories is optional, they allow you to further organize and manage your subaccounts according to your specific technical and business needs. The service also lets you manage the custom properties/tags that you associate with your directories and subaccounts. NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceManagerBindingExtendedResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceManagerBindingExtendedResponseObject{}

// ServiceManagerBindingExtendedResponseObject Note that we are listing here all the possible fields that this object can contain. However, they aren't all present in each object.<br>A binding that uses the Basic credentials type contains:<br>name, clientid, clientsecret, url, sm_url, creationDate, and xsappname.<br>A binding that uses the mTLS credentials type contains:<br>name, clientid, certificate, key, certUrl, sm_url, creationDate, and xsappname.
type ServiceManagerBindingExtendedResponseObject struct {
	// URL to fetch the token.
	CertUrl *string `json:"certUrl,omitempty"`
	// A data file that contains important information for verifying a server's or device's identity, including the public key, a statement of who issued the certificate (TLS certificates are issued by a certificate authority), and the certificate's expiration date.
	Certificate *string `json:"certificate,omitempty"`
	// A public identifier of the app.
	Clientid *string `json:"clientid,omitempty"`
	// Secret known only to the app and the authorization server.
	Clientsecret *string `json:"clientsecret,omitempty"`
	// The time the Service Manager binding was created.<br>In ISO 8601 format:YYYY-MM-DDThh:mm:ssTZD.
	CreationDate *string `json:"creationDate,omitempty"`
	// Message to be decrypted.
	Key *string `json:"key,omitempty"`
	// The name of the service binding.
	Name *string `json:"name,omitempty"`
	// The URL of Service Manager APIs to access with the obtained token.
	SmUrl *string `json:"sm_url,omitempty"`
	// The URL to authentication server to get a token to authenticate with Service Manager using the obtained client ID and secret.
	Url *string `json:"url,omitempty"`
	// The name of the xsapp used to get the access token.
	Xsappname *string `json:"xsappname,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceManagerBindingExtendedResponseObject ServiceManagerBindingExtendedResponseObject

// NewServiceManagerBindingExtendedResponseObject instantiates a new ServiceManagerBindingExtendedResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceManagerBindingExtendedResponseObject() *ServiceManagerBindingExtendedResponseObject {
	this := ServiceManagerBindingExtendedResponseObject{}
	return &this
}

// NewServiceManagerBindingExtendedResponseObjectWithDefaults instantiates a new ServiceManagerBindingExtendedResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceManagerBindingExtendedResponseObjectWithDefaults() *ServiceManagerBindingExtendedResponseObject {
	this := ServiceManagerBindingExtendedResponseObject{}
	return &this
}

// GetCertUrl returns the CertUrl field value if set, zero value otherwise.
func (o *ServiceManagerBindingExtendedResponseObject) GetCertUrl() string {
	if o == nil || IsNil(o.CertUrl) {
		var ret string
		return ret
	}
	return *o.CertUrl
}

// GetCertUrlOk returns a tuple with the CertUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingExtendedResponseObject) GetCertUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CertUrl) {
		return nil, false
	}
	return o.CertUrl, true
}

// HasCertUrl returns a boolean if a field has been set.
func (o *ServiceManagerBindingExtendedResponseObject) HasCertUrl() bool {
	if o != nil && !IsNil(o.CertUrl) {
		return true
	}

	return false
}

// SetCertUrl gets a reference to the given string and assigns it to the CertUrl field.
func (o *ServiceManagerBindingExtendedResponseObject) SetCertUrl(v string) {
	o.CertUrl = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *ServiceManagerBindingExtendedResponseObject) GetCertificate() string {
	if o == nil || IsNil(o.Certificate) {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingExtendedResponseObject) GetCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *ServiceManagerBindingExtendedResponseObject) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *ServiceManagerBindingExtendedResponseObject) SetCertificate(v string) {
	o.Certificate = &v
}

// GetClientid returns the Clientid field value if set, zero value otherwise.
func (o *ServiceManagerBindingExtendedResponseObject) GetClientid() string {
	if o == nil || IsNil(o.Clientid) {
		var ret string
		return ret
	}
	return *o.Clientid
}

// GetClientidOk returns a tuple with the Clientid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingExtendedResponseObject) GetClientidOk() (*string, bool) {
	if o == nil || IsNil(o.Clientid) {
		return nil, false
	}
	return o.Clientid, true
}

// HasClientid returns a boolean if a field has been set.
func (o *ServiceManagerBindingExtendedResponseObject) HasClientid() bool {
	if o != nil && !IsNil(o.Clientid) {
		return true
	}

	return false
}

// SetClientid gets a reference to the given string and assigns it to the Clientid field.
func (o *ServiceManagerBindingExtendedResponseObject) SetClientid(v string) {
	o.Clientid = &v
}

// GetClientsecret returns the Clientsecret field value if set, zero value otherwise.
func (o *ServiceManagerBindingExtendedResponseObject) GetClientsecret() string {
	if o == nil || IsNil(o.Clientsecret) {
		var ret string
		return ret
	}
	return *o.Clientsecret
}

// GetClientsecretOk returns a tuple with the Clientsecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingExtendedResponseObject) GetClientsecretOk() (*string, bool) {
	if o == nil || IsNil(o.Clientsecret) {
		return nil, false
	}
	return o.Clientsecret, true
}

// HasClientsecret returns a boolean if a field has been set.
func (o *ServiceManagerBindingExtendedResponseObject) HasClientsecret() bool {
	if o != nil && !IsNil(o.Clientsecret) {
		return true
	}

	return false
}

// SetClientsecret gets a reference to the given string and assigns it to the Clientsecret field.
func (o *ServiceManagerBindingExtendedResponseObject) SetClientsecret(v string) {
	o.Clientsecret = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *ServiceManagerBindingExtendedResponseObject) GetCreationDate() string {
	if o == nil || IsNil(o.CreationDate) {
		var ret string
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingExtendedResponseObject) GetCreationDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *ServiceManagerBindingExtendedResponseObject) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given string and assigns it to the CreationDate field.
func (o *ServiceManagerBindingExtendedResponseObject) SetCreationDate(v string) {
	o.CreationDate = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ServiceManagerBindingExtendedResponseObject) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingExtendedResponseObject) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ServiceManagerBindingExtendedResponseObject) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ServiceManagerBindingExtendedResponseObject) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceManagerBindingExtendedResponseObject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingExtendedResponseObject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceManagerBindingExtendedResponseObject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceManagerBindingExtendedResponseObject) SetName(v string) {
	o.Name = &v
}

// GetSmUrl returns the SmUrl field value if set, zero value otherwise.
func (o *ServiceManagerBindingExtendedResponseObject) GetSmUrl() string {
	if o == nil || IsNil(o.SmUrl) {
		var ret string
		return ret
	}
	return *o.SmUrl
}

// GetSmUrlOk returns a tuple with the SmUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingExtendedResponseObject) GetSmUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SmUrl) {
		return nil, false
	}
	return o.SmUrl, true
}

// HasSmUrl returns a boolean if a field has been set.
func (o *ServiceManagerBindingExtendedResponseObject) HasSmUrl() bool {
	if o != nil && !IsNil(o.SmUrl) {
		return true
	}

	return false
}

// SetSmUrl gets a reference to the given string and assigns it to the SmUrl field.
func (o *ServiceManagerBindingExtendedResponseObject) SetSmUrl(v string) {
	o.SmUrl = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ServiceManagerBindingExtendedResponseObject) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingExtendedResponseObject) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ServiceManagerBindingExtendedResponseObject) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ServiceManagerBindingExtendedResponseObject) SetUrl(v string) {
	o.Url = &v
}

// GetXsappname returns the Xsappname field value if set, zero value otherwise.
func (o *ServiceManagerBindingExtendedResponseObject) GetXsappname() string {
	if o == nil || IsNil(o.Xsappname) {
		var ret string
		return ret
	}
	return *o.Xsappname
}

// GetXsappnameOk returns a tuple with the Xsappname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManagerBindingExtendedResponseObject) GetXsappnameOk() (*string, bool) {
	if o == nil || IsNil(o.Xsappname) {
		return nil, false
	}
	return o.Xsappname, true
}

// HasXsappname returns a boolean if a field has been set.
func (o *ServiceManagerBindingExtendedResponseObject) HasXsappname() bool {
	if o != nil && !IsNil(o.Xsappname) {
		return true
	}

	return false
}

// SetXsappname gets a reference to the given string and assigns it to the Xsappname field.
func (o *ServiceManagerBindingExtendedResponseObject) SetXsappname(v string) {
	o.Xsappname = &v
}

func (o ServiceManagerBindingExtendedResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceManagerBindingExtendedResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertUrl) {
		toSerialize["certUrl"] = o.CertUrl
	}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	if !IsNil(o.Clientid) {
		toSerialize["clientid"] = o.Clientid
	}
	if !IsNil(o.Clientsecret) {
		toSerialize["clientsecret"] = o.Clientsecret
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creationDate"] = o.CreationDate
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SmUrl) {
		toSerialize["sm_url"] = o.SmUrl
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Xsappname) {
		toSerialize["xsappname"] = o.Xsappname
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceManagerBindingExtendedResponseObject) UnmarshalJSON(data []byte) (err error) {
	varServiceManagerBindingExtendedResponseObject := _ServiceManagerBindingExtendedResponseObject{}

	err = json.Unmarshal(data, &varServiceManagerBindingExtendedResponseObject)

	if err != nil {
		return err
	}

	*o = ServiceManagerBindingExtendedResponseObject(varServiceManagerBindingExtendedResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "certUrl")
		delete(additionalProperties, "certificate")
		delete(additionalProperties, "clientid")
		delete(additionalProperties, "clientsecret")
		delete(additionalProperties, "creationDate")
		delete(additionalProperties, "key")
		delete(additionalProperties, "name")
		delete(additionalProperties, "sm_url")
		delete(additionalProperties, "url")
		delete(additionalProperties, "xsappname")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceManagerBindingExtendedResponseObject struct {
	value *ServiceManagerBindingExtendedResponseObject
	isSet bool
}

func (v NullableServiceManagerBindingExtendedResponseObject) Get() *ServiceManagerBindingExtendedResponseObject {
	return v.value
}

func (v *NullableServiceManagerBindingExtendedResponseObject) Set(val *ServiceManagerBindingExtendedResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceManagerBindingExtendedResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceManagerBindingExtendedResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceManagerBindingExtendedResponseObject(val *ServiceManagerBindingExtendedResponseObject) *NullableServiceManagerBindingExtendedResponseObject {
	return &NullableServiceManagerBindingExtendedResponseObject{value: val, isSet: true}
}

func (v NullableServiceManagerBindingExtendedResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceManagerBindingExtendedResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


