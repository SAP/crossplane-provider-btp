/*
Provisioning Service

The Provisioning service provides REST APIs that are responsible for the provisioning and deprovisioning of environment instances and tenants in the corresponding region.  Provisioning is performed after validation by the Entitlements service. Use the APIs in this service to manage and create environment instances, such as a Cloud Foundry org, in a subaccount and to retrieve the plans and quota assignments for a subaccount.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServicePlanAssignmentsResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicePlanAssignmentsResponseObject{}

// ServicePlanAssignmentsResponseObject struct for ServicePlanAssignmentsResponseObject
type ServicePlanAssignmentsResponseObject struct {
	// The quantity of consumed quota. The service owner can provide a value for the consumed quota if it is different from the provisioned quota calculation.
	ConsumedQuota *int64 `json:"consumedQuota,omitempty"`
	// Unique ID of the global account associated with the subaccount.
	GlobalAccountGUID *string `json:"globalAccountGUID,omitempty"`
	// The ID of the associated global account.
	GlobalAccountId *string `json:"globalAccountId,omitempty"`
	// The name of the plan of the provisioned quota.
	Plan               *string `json:"plan,omitempty"`
	ProvisioningMethod *string `json:"provisioningMethod,omitempty"`
	// The quantity of provisioned quota.
	Quota     *int32                         `json:"quota,omitempty"`
	Resources []QuotaResourcesResponseObject `json:"resources,omitempty"`
	// The name of the service of the provisioned quota.
	Service         *string `json:"service,omitempty"`
	ServiceCategory *string `json:"serviceCategory,omitempty"`
	// Unique ID of the subaccount for which to get quota.
	SubaccountGUID *string `json:"subaccountGUID,omitempty"`
	// The ID of the tenant for the subaccount.
	TenantId *string `json:"tenantId,omitempty"`
	// The unique identifier of the plan of the provisioned quota.
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty"`
	// Whether an unlimited quantity of quota can be provisioned.
	Unlimited *bool `json:"unlimited,omitempty"`
}

// NewServicePlanAssignmentsResponseObject instantiates a new ServicePlanAssignmentsResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePlanAssignmentsResponseObject() *ServicePlanAssignmentsResponseObject {
	this := ServicePlanAssignmentsResponseObject{}
	return &this
}

// NewServicePlanAssignmentsResponseObjectWithDefaults instantiates a new ServicePlanAssignmentsResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePlanAssignmentsResponseObjectWithDefaults() *ServicePlanAssignmentsResponseObject {
	this := ServicePlanAssignmentsResponseObject{}
	return &this
}

// GetConsumedQuota returns the ConsumedQuota field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetConsumedQuota() int64 {
	if o == nil || IsNil(o.ConsumedQuota) {
		var ret int64
		return ret
	}
	return *o.ConsumedQuota
}

// GetConsumedQuotaOk returns a tuple with the ConsumedQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetConsumedQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.ConsumedQuota) {
		return nil, false
	}
	return o.ConsumedQuota, true
}

// HasConsumedQuota returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasConsumedQuota() bool {
	if o != nil && !IsNil(o.ConsumedQuota) {
		return true
	}

	return false
}

// SetConsumedQuota gets a reference to the given int64 and assigns it to the ConsumedQuota field.
func (o *ServicePlanAssignmentsResponseObject) SetConsumedQuota(v int64) {
	o.ConsumedQuota = &v
}

// GetGlobalAccountGUID returns the GlobalAccountGUID field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetGlobalAccountGUID() string {
	if o == nil || IsNil(o.GlobalAccountGUID) {
		var ret string
		return ret
	}
	return *o.GlobalAccountGUID
}

// GetGlobalAccountGUIDOk returns a tuple with the GlobalAccountGUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetGlobalAccountGUIDOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalAccountGUID) {
		return nil, false
	}
	return o.GlobalAccountGUID, true
}

// HasGlobalAccountGUID returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasGlobalAccountGUID() bool {
	if o != nil && !IsNil(o.GlobalAccountGUID) {
		return true
	}

	return false
}

// SetGlobalAccountGUID gets a reference to the given string and assigns it to the GlobalAccountGUID field.
func (o *ServicePlanAssignmentsResponseObject) SetGlobalAccountGUID(v string) {
	o.GlobalAccountGUID = &v
}

// GetGlobalAccountId returns the GlobalAccountId field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetGlobalAccountId() string {
	if o == nil || IsNil(o.GlobalAccountId) {
		var ret string
		return ret
	}
	return *o.GlobalAccountId
}

// GetGlobalAccountIdOk returns a tuple with the GlobalAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetGlobalAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalAccountId) {
		return nil, false
	}
	return o.GlobalAccountId, true
}

// HasGlobalAccountId returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasGlobalAccountId() bool {
	if o != nil && !IsNil(o.GlobalAccountId) {
		return true
	}

	return false
}

// SetGlobalAccountId gets a reference to the given string and assigns it to the GlobalAccountId field.
func (o *ServicePlanAssignmentsResponseObject) SetGlobalAccountId(v string) {
	o.GlobalAccountId = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *ServicePlanAssignmentsResponseObject) SetPlan(v string) {
	o.Plan = &v
}

// GetProvisioningMethod returns the ProvisioningMethod field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetProvisioningMethod() string {
	if o == nil || IsNil(o.ProvisioningMethod) {
		var ret string
		return ret
	}
	return *o.ProvisioningMethod
}

// GetProvisioningMethodOk returns a tuple with the ProvisioningMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetProvisioningMethodOk() (*string, bool) {
	if o == nil || IsNil(o.ProvisioningMethod) {
		return nil, false
	}
	return o.ProvisioningMethod, true
}

// HasProvisioningMethod returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasProvisioningMethod() bool {
	if o != nil && !IsNil(o.ProvisioningMethod) {
		return true
	}

	return false
}

// SetProvisioningMethod gets a reference to the given string and assigns it to the ProvisioningMethod field.
func (o *ServicePlanAssignmentsResponseObject) SetProvisioningMethod(v string) {
	o.ProvisioningMethod = &v
}

// GetQuota returns the Quota field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetQuota() int32 {
	if o == nil || IsNil(o.Quota) {
		var ret int32
		return ret
	}
	return *o.Quota
}

// GetQuotaOk returns a tuple with the Quota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetQuotaOk() (*int32, bool) {
	if o == nil || IsNil(o.Quota) {
		return nil, false
	}
	return o.Quota, true
}

// HasQuota returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasQuota() bool {
	if o != nil && !IsNil(o.Quota) {
		return true
	}

	return false
}

// SetQuota gets a reference to the given int32 and assigns it to the Quota field.
func (o *ServicePlanAssignmentsResponseObject) SetQuota(v int32) {
	o.Quota = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetResources() []QuotaResourcesResponseObject {
	if o == nil || IsNil(o.Resources) {
		var ret []QuotaResourcesResponseObject
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetResourcesOk() ([]QuotaResourcesResponseObject, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []QuotaResourcesResponseObject and assigns it to the Resources field.
func (o *ServicePlanAssignmentsResponseObject) SetResources(v []QuotaResourcesResponseObject) {
	o.Resources = v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *ServicePlanAssignmentsResponseObject) SetService(v string) {
	o.Service = &v
}

// GetServiceCategory returns the ServiceCategory field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetServiceCategory() string {
	if o == nil || IsNil(o.ServiceCategory) {
		var ret string
		return ret
	}
	return *o.ServiceCategory
}

// GetServiceCategoryOk returns a tuple with the ServiceCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetServiceCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceCategory) {
		return nil, false
	}
	return o.ServiceCategory, true
}

// HasServiceCategory returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasServiceCategory() bool {
	if o != nil && !IsNil(o.ServiceCategory) {
		return true
	}

	return false
}

// SetServiceCategory gets a reference to the given string and assigns it to the ServiceCategory field.
func (o *ServicePlanAssignmentsResponseObject) SetServiceCategory(v string) {
	o.ServiceCategory = &v
}

// GetSubaccountGUID returns the SubaccountGUID field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetSubaccountGUID() string {
	if o == nil || IsNil(o.SubaccountGUID) {
		var ret string
		return ret
	}
	return *o.SubaccountGUID
}

// GetSubaccountGUIDOk returns a tuple with the SubaccountGUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetSubaccountGUIDOk() (*string, bool) {
	if o == nil || IsNil(o.SubaccountGUID) {
		return nil, false
	}
	return o.SubaccountGUID, true
}

// HasSubaccountGUID returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasSubaccountGUID() bool {
	if o != nil && !IsNil(o.SubaccountGUID) {
		return true
	}

	return false
}

// SetSubaccountGUID gets a reference to the given string and assigns it to the SubaccountGUID field.
func (o *ServicePlanAssignmentsResponseObject) SetSubaccountGUID(v string) {
	o.SubaccountGUID = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ServicePlanAssignmentsResponseObject) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUniqueIdentifier returns the UniqueIdentifier field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetUniqueIdentifier() string {
	if o == nil || IsNil(o.UniqueIdentifier) {
		var ret string
		return ret
	}
	return *o.UniqueIdentifier
}

// GetUniqueIdentifierOk returns a tuple with the UniqueIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetUniqueIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.UniqueIdentifier) {
		return nil, false
	}
	return o.UniqueIdentifier, true
}

// HasUniqueIdentifier returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasUniqueIdentifier() bool {
	if o != nil && !IsNil(o.UniqueIdentifier) {
		return true
	}

	return false
}

// SetUniqueIdentifier gets a reference to the given string and assigns it to the UniqueIdentifier field.
func (o *ServicePlanAssignmentsResponseObject) SetUniqueIdentifier(v string) {
	o.UniqueIdentifier = &v
}

// GetUnlimited returns the Unlimited field value if set, zero value otherwise.
func (o *ServicePlanAssignmentsResponseObject) GetUnlimited() bool {
	if o == nil || IsNil(o.Unlimited) {
		var ret bool
		return ret
	}
	return *o.Unlimited
}

// GetUnlimitedOk returns a tuple with the Unlimited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanAssignmentsResponseObject) GetUnlimitedOk() (*bool, bool) {
	if o == nil || IsNil(o.Unlimited) {
		return nil, false
	}
	return o.Unlimited, true
}

// HasUnlimited returns a boolean if a field has been set.
func (o *ServicePlanAssignmentsResponseObject) HasUnlimited() bool {
	if o != nil && !IsNil(o.Unlimited) {
		return true
	}

	return false
}

// SetUnlimited gets a reference to the given bool and assigns it to the Unlimited field.
func (o *ServicePlanAssignmentsResponseObject) SetUnlimited(v bool) {
	o.Unlimited = &v
}

func (o ServicePlanAssignmentsResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicePlanAssignmentsResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConsumedQuota) {
		toSerialize["consumedQuota"] = o.ConsumedQuota
	}
	if !IsNil(o.GlobalAccountGUID) {
		toSerialize["globalAccountGUID"] = o.GlobalAccountGUID
	}
	if !IsNil(o.GlobalAccountId) {
		toSerialize["globalAccountId"] = o.GlobalAccountId
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.ProvisioningMethod) {
		toSerialize["provisioningMethod"] = o.ProvisioningMethod
	}
	if !IsNil(o.Quota) {
		toSerialize["quota"] = o.Quota
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.ServiceCategory) {
		toSerialize["serviceCategory"] = o.ServiceCategory
	}
	if !IsNil(o.SubaccountGUID) {
		toSerialize["subaccountGUID"] = o.SubaccountGUID
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.UniqueIdentifier) {
		toSerialize["uniqueIdentifier"] = o.UniqueIdentifier
	}
	if !IsNil(o.Unlimited) {
		toSerialize["unlimited"] = o.Unlimited
	}
	return toSerialize, nil
}

type NullableServicePlanAssignmentsResponseObject struct {
	value *ServicePlanAssignmentsResponseObject
	isSet bool
}

func (v NullableServicePlanAssignmentsResponseObject) Get() *ServicePlanAssignmentsResponseObject {
	return v.value
}

func (v *NullableServicePlanAssignmentsResponseObject) Set(val *ServicePlanAssignmentsResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePlanAssignmentsResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePlanAssignmentsResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePlanAssignmentsResponseObject(val *ServicePlanAssignmentsResponseObject) *NullableServicePlanAssignmentsResponseObject {
	return &NullableServicePlanAssignmentsResponseObject{value: val, isSet: true}
}

func (v NullableServicePlanAssignmentsResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePlanAssignmentsResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
