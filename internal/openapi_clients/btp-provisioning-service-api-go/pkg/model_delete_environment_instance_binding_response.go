/*
Provisioning Service

The Provisioning service provides REST APIs that are responsible for the provisioning and deprovisioning of environment instances and tenants in the corresponding region.  Provisioning is performed after validation by the Entitlements service. Use the APIs in this service to manage and create environment instances, such as a Cloud Foundry org, in a subaccount and to retrieve the plans and quota assignments for a subaccount.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeleteEnvironmentInstanceBindingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteEnvironmentInstanceBindingResponse{}

// DeleteEnvironmentInstanceBindingResponse struct for DeleteEnvironmentInstanceBindingResponse
type DeleteEnvironmentInstanceBindingResponse struct {
	// The ID of the binding to delete.
	BindingId *string `json:"bindingId,omitempty"`
	// The plan ID of the associated environment instance.
	PlanId *string `json:"planId,omitempty"`
	// The associated environment instance ID.
	ServiceId *string `json:"serviceId,omitempty"`
}

// NewDeleteEnvironmentInstanceBindingResponse instantiates a new DeleteEnvironmentInstanceBindingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteEnvironmentInstanceBindingResponse() *DeleteEnvironmentInstanceBindingResponse {
	this := DeleteEnvironmentInstanceBindingResponse{}
	return &this
}

// NewDeleteEnvironmentInstanceBindingResponseWithDefaults instantiates a new DeleteEnvironmentInstanceBindingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteEnvironmentInstanceBindingResponseWithDefaults() *DeleteEnvironmentInstanceBindingResponse {
	this := DeleteEnvironmentInstanceBindingResponse{}
	return &this
}

// GetBindingId returns the BindingId field value if set, zero value otherwise.
func (o *DeleteEnvironmentInstanceBindingResponse) GetBindingId() string {
	if o == nil || IsNil(o.BindingId) {
		var ret string
		return ret
	}
	return *o.BindingId
}

// GetBindingIdOk returns a tuple with the BindingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteEnvironmentInstanceBindingResponse) GetBindingIdOk() (*string, bool) {
	if o == nil || IsNil(o.BindingId) {
		return nil, false
	}
	return o.BindingId, true
}

// HasBindingId returns a boolean if a field has been set.
func (o *DeleteEnvironmentInstanceBindingResponse) HasBindingId() bool {
	if o != nil && !IsNil(o.BindingId) {
		return true
	}

	return false
}

// SetBindingId gets a reference to the given string and assigns it to the BindingId field.
func (o *DeleteEnvironmentInstanceBindingResponse) SetBindingId(v string) {
	o.BindingId = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *DeleteEnvironmentInstanceBindingResponse) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteEnvironmentInstanceBindingResponse) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *DeleteEnvironmentInstanceBindingResponse) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *DeleteEnvironmentInstanceBindingResponse) SetPlanId(v string) {
	o.PlanId = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *DeleteEnvironmentInstanceBindingResponse) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteEnvironmentInstanceBindingResponse) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *DeleteEnvironmentInstanceBindingResponse) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *DeleteEnvironmentInstanceBindingResponse) SetServiceId(v string) {
	o.ServiceId = &v
}

func (o DeleteEnvironmentInstanceBindingResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteEnvironmentInstanceBindingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BindingId) {
		toSerialize["bindingId"] = o.BindingId
	}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	return toSerialize, nil
}

type NullableDeleteEnvironmentInstanceBindingResponse struct {
	value *DeleteEnvironmentInstanceBindingResponse
	isSet bool
}

func (v NullableDeleteEnvironmentInstanceBindingResponse) Get() *DeleteEnvironmentInstanceBindingResponse {
	return v.value
}

func (v *NullableDeleteEnvironmentInstanceBindingResponse) Set(val *DeleteEnvironmentInstanceBindingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteEnvironmentInstanceBindingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteEnvironmentInstanceBindingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteEnvironmentInstanceBindingResponse(val *DeleteEnvironmentInstanceBindingResponse) *NullableDeleteEnvironmentInstanceBindingResponse {
	return &NullableDeleteEnvironmentInstanceBindingResponse{value: val, isSet: true}
}

func (v NullableDeleteEnvironmentInstanceBindingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteEnvironmentInstanceBindingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
