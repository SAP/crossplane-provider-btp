/*
Provisioning Service

The Provisioning service provides REST APIs that are responsible for the provisioning and deprovisioning of environment instances and tenants in the corresponding region.  Provisioning is performed after validation by the Entitlements service. Use the APIs in this service to manage and create environment instances, such as a Cloud Foundry org, in a subaccount and to retrieve the plans and quota assignments for a subaccount.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AvailableEnvironmentResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AvailableEnvironmentResponseObject{}

// AvailableEnvironmentResponseObject struct for AvailableEnvironmentResponseObject
type AvailableEnvironmentResponseObject struct {
	// Whether the user can use this broker for creating a second CF environment
	AllowAdditionalEnvironmentInstance *bool `json:"allowAdditionalEnvironmentInstance,omitempty"`
	// The availability level of the environment broker.
	AvailabilityLevel *string `json:"availabilityLevel,omitempty"`
	// The create schema of the environment broker.
	CreateSchema *string `json:"createSchema,omitempty"`
	// Description of the service plan for the available environment.
	Description *string `json:"description,omitempty"`
	// The type of environment that is available (for example: cloudfoundry).
	EnvironmentType *string `json:"environmentType,omitempty"`
	// The landscape label of the environment broker.
	LandscapeLabel *string `json:"landscapeLabel,omitempty"`
	// Name of the service plan for the available environment.
	PlanName *string `json:"planName,omitempty"`
	// Specifies if the consumer can change the plan of an existing instance of the environment.
	PlanUpdatable *bool `json:"planUpdatable,omitempty"`
	// The short description of the service.
	ServiceDescription *string `json:"serviceDescription,omitempty"`
	// The display name of the service.
	ServiceDisplayName *string `json:"serviceDisplayName,omitempty"`
	// The URL of the documentation link for the service.
	ServiceDocumentationUrl *string `json:"serviceDocumentationUrl,omitempty"`
	// The URL of the image for the service.
	ServiceImageUrl *string `json:"serviceImageUrl,omitempty"`
	// The long description of the service.
	ServiceLongDescription *string `json:"serviceLongDescription,omitempty"`
	// Name of the service offered in the catalog of the corresponding environment broker (for example, cloudfoundry).
	ServiceName *string `json:"serviceName,omitempty"`
	// The URL of the support link for the service.
	ServiceSupportUrl *string `json:"serviceSupportUrl,omitempty"`
	// Technical key of the corresponding environment broker.
	TechnicalKey *string `json:"technicalKey,omitempty"`
	// The update schema of the environment broker.
	UpdateSchema *string `json:"updateSchema,omitempty"`
}

// NewAvailableEnvironmentResponseObject instantiates a new AvailableEnvironmentResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailableEnvironmentResponseObject() *AvailableEnvironmentResponseObject {
	this := AvailableEnvironmentResponseObject{}
	return &this
}

// NewAvailableEnvironmentResponseObjectWithDefaults instantiates a new AvailableEnvironmentResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailableEnvironmentResponseObjectWithDefaults() *AvailableEnvironmentResponseObject {
	this := AvailableEnvironmentResponseObject{}
	return &this
}

// GetAllowAdditionalEnvironmentInstance returns the AllowAdditionalEnvironmentInstance field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetAllowAdditionalEnvironmentInstance() bool {
	if o == nil || IsNil(o.AllowAdditionalEnvironmentInstance) {
		var ret bool
		return ret
	}
	return *o.AllowAdditionalEnvironmentInstance
}

// GetAllowAdditionalEnvironmentInstanceOk returns a tuple with the AllowAdditionalEnvironmentInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetAllowAdditionalEnvironmentInstanceOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowAdditionalEnvironmentInstance) {
		return nil, false
	}
	return o.AllowAdditionalEnvironmentInstance, true
}

// HasAllowAdditionalEnvironmentInstance returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasAllowAdditionalEnvironmentInstance() bool {
	if o != nil && !IsNil(o.AllowAdditionalEnvironmentInstance) {
		return true
	}

	return false
}

// SetAllowAdditionalEnvironmentInstance gets a reference to the given bool and assigns it to the AllowAdditionalEnvironmentInstance field.
func (o *AvailableEnvironmentResponseObject) SetAllowAdditionalEnvironmentInstance(v bool) {
	o.AllowAdditionalEnvironmentInstance = &v
}

// GetAvailabilityLevel returns the AvailabilityLevel field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetAvailabilityLevel() string {
	if o == nil || IsNil(o.AvailabilityLevel) {
		var ret string
		return ret
	}
	return *o.AvailabilityLevel
}

// GetAvailabilityLevelOk returns a tuple with the AvailabilityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetAvailabilityLevelOk() (*string, bool) {
	if o == nil || IsNil(o.AvailabilityLevel) {
		return nil, false
	}
	return o.AvailabilityLevel, true
}

// HasAvailabilityLevel returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasAvailabilityLevel() bool {
	if o != nil && !IsNil(o.AvailabilityLevel) {
		return true
	}

	return false
}

// SetAvailabilityLevel gets a reference to the given string and assigns it to the AvailabilityLevel field.
func (o *AvailableEnvironmentResponseObject) SetAvailabilityLevel(v string) {
	o.AvailabilityLevel = &v
}

// GetCreateSchema returns the CreateSchema field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetCreateSchema() string {
	if o == nil || IsNil(o.CreateSchema) {
		var ret string
		return ret
	}
	return *o.CreateSchema
}

// GetCreateSchemaOk returns a tuple with the CreateSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetCreateSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.CreateSchema) {
		return nil, false
	}
	return o.CreateSchema, true
}

// HasCreateSchema returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasCreateSchema() bool {
	if o != nil && !IsNil(o.CreateSchema) {
		return true
	}

	return false
}

// SetCreateSchema gets a reference to the given string and assigns it to the CreateSchema field.
func (o *AvailableEnvironmentResponseObject) SetCreateSchema(v string) {
	o.CreateSchema = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AvailableEnvironmentResponseObject) SetDescription(v string) {
	o.Description = &v
}

// GetEnvironmentType returns the EnvironmentType field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetEnvironmentType() string {
	if o == nil || IsNil(o.EnvironmentType) {
		var ret string
		return ret
	}
	return *o.EnvironmentType
}

// GetEnvironmentTypeOk returns a tuple with the EnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentType) {
		return nil, false
	}
	return o.EnvironmentType, true
}

// HasEnvironmentType returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasEnvironmentType() bool {
	if o != nil && !IsNil(o.EnvironmentType) {
		return true
	}

	return false
}

// SetEnvironmentType gets a reference to the given string and assigns it to the EnvironmentType field.
func (o *AvailableEnvironmentResponseObject) SetEnvironmentType(v string) {
	o.EnvironmentType = &v
}

// GetLandscapeLabel returns the LandscapeLabel field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetLandscapeLabel() string {
	if o == nil || IsNil(o.LandscapeLabel) {
		var ret string
		return ret
	}
	return *o.LandscapeLabel
}

// GetLandscapeLabelOk returns a tuple with the LandscapeLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetLandscapeLabelOk() (*string, bool) {
	if o == nil || IsNil(o.LandscapeLabel) {
		return nil, false
	}
	return o.LandscapeLabel, true
}

// HasLandscapeLabel returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasLandscapeLabel() bool {
	if o != nil && !IsNil(o.LandscapeLabel) {
		return true
	}

	return false
}

// SetLandscapeLabel gets a reference to the given string and assigns it to the LandscapeLabel field.
func (o *AvailableEnvironmentResponseObject) SetLandscapeLabel(v string) {
	o.LandscapeLabel = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *AvailableEnvironmentResponseObject) SetPlanName(v string) {
	o.PlanName = &v
}

// GetPlanUpdatable returns the PlanUpdatable field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetPlanUpdatable() bool {
	if o == nil || IsNil(o.PlanUpdatable) {
		var ret bool
		return ret
	}
	return *o.PlanUpdatable
}

// GetPlanUpdatableOk returns a tuple with the PlanUpdatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetPlanUpdatableOk() (*bool, bool) {
	if o == nil || IsNil(o.PlanUpdatable) {
		return nil, false
	}
	return o.PlanUpdatable, true
}

// HasPlanUpdatable returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasPlanUpdatable() bool {
	if o != nil && !IsNil(o.PlanUpdatable) {
		return true
	}

	return false
}

// SetPlanUpdatable gets a reference to the given bool and assigns it to the PlanUpdatable field.
func (o *AvailableEnvironmentResponseObject) SetPlanUpdatable(v bool) {
	o.PlanUpdatable = &v
}

// GetServiceDescription returns the ServiceDescription field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetServiceDescription() string {
	if o == nil || IsNil(o.ServiceDescription) {
		var ret string
		return ret
	}
	return *o.ServiceDescription
}

// GetServiceDescriptionOk returns a tuple with the ServiceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetServiceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceDescription) {
		return nil, false
	}
	return o.ServiceDescription, true
}

// HasServiceDescription returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasServiceDescription() bool {
	if o != nil && !IsNil(o.ServiceDescription) {
		return true
	}

	return false
}

// SetServiceDescription gets a reference to the given string and assigns it to the ServiceDescription field.
func (o *AvailableEnvironmentResponseObject) SetServiceDescription(v string) {
	o.ServiceDescription = &v
}

// GetServiceDisplayName returns the ServiceDisplayName field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetServiceDisplayName() string {
	if o == nil || IsNil(o.ServiceDisplayName) {
		var ret string
		return ret
	}
	return *o.ServiceDisplayName
}

// GetServiceDisplayNameOk returns a tuple with the ServiceDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetServiceDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceDisplayName) {
		return nil, false
	}
	return o.ServiceDisplayName, true
}

// HasServiceDisplayName returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasServiceDisplayName() bool {
	if o != nil && !IsNil(o.ServiceDisplayName) {
		return true
	}

	return false
}

// SetServiceDisplayName gets a reference to the given string and assigns it to the ServiceDisplayName field.
func (o *AvailableEnvironmentResponseObject) SetServiceDisplayName(v string) {
	o.ServiceDisplayName = &v
}

// GetServiceDocumentationUrl returns the ServiceDocumentationUrl field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetServiceDocumentationUrl() string {
	if o == nil || IsNil(o.ServiceDocumentationUrl) {
		var ret string
		return ret
	}
	return *o.ServiceDocumentationUrl
}

// GetServiceDocumentationUrlOk returns a tuple with the ServiceDocumentationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetServiceDocumentationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceDocumentationUrl) {
		return nil, false
	}
	return o.ServiceDocumentationUrl, true
}

// HasServiceDocumentationUrl returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasServiceDocumentationUrl() bool {
	if o != nil && !IsNil(o.ServiceDocumentationUrl) {
		return true
	}

	return false
}

// SetServiceDocumentationUrl gets a reference to the given string and assigns it to the ServiceDocumentationUrl field.
func (o *AvailableEnvironmentResponseObject) SetServiceDocumentationUrl(v string) {
	o.ServiceDocumentationUrl = &v
}

// GetServiceImageUrl returns the ServiceImageUrl field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetServiceImageUrl() string {
	if o == nil || IsNil(o.ServiceImageUrl) {
		var ret string
		return ret
	}
	return *o.ServiceImageUrl
}

// GetServiceImageUrlOk returns a tuple with the ServiceImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetServiceImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceImageUrl) {
		return nil, false
	}
	return o.ServiceImageUrl, true
}

// HasServiceImageUrl returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasServiceImageUrl() bool {
	if o != nil && !IsNil(o.ServiceImageUrl) {
		return true
	}

	return false
}

// SetServiceImageUrl gets a reference to the given string and assigns it to the ServiceImageUrl field.
func (o *AvailableEnvironmentResponseObject) SetServiceImageUrl(v string) {
	o.ServiceImageUrl = &v
}

// GetServiceLongDescription returns the ServiceLongDescription field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetServiceLongDescription() string {
	if o == nil || IsNil(o.ServiceLongDescription) {
		var ret string
		return ret
	}
	return *o.ServiceLongDescription
}

// GetServiceLongDescriptionOk returns a tuple with the ServiceLongDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetServiceLongDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceLongDescription) {
		return nil, false
	}
	return o.ServiceLongDescription, true
}

// HasServiceLongDescription returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasServiceLongDescription() bool {
	if o != nil && !IsNil(o.ServiceLongDescription) {
		return true
	}

	return false
}

// SetServiceLongDescription gets a reference to the given string and assigns it to the ServiceLongDescription field.
func (o *AvailableEnvironmentResponseObject) SetServiceLongDescription(v string) {
	o.ServiceLongDescription = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *AvailableEnvironmentResponseObject) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetServiceSupportUrl returns the ServiceSupportUrl field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetServiceSupportUrl() string {
	if o == nil || IsNil(o.ServiceSupportUrl) {
		var ret string
		return ret
	}
	return *o.ServiceSupportUrl
}

// GetServiceSupportUrlOk returns a tuple with the ServiceSupportUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetServiceSupportUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceSupportUrl) {
		return nil, false
	}
	return o.ServiceSupportUrl, true
}

// HasServiceSupportUrl returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasServiceSupportUrl() bool {
	if o != nil && !IsNil(o.ServiceSupportUrl) {
		return true
	}

	return false
}

// SetServiceSupportUrl gets a reference to the given string and assigns it to the ServiceSupportUrl field.
func (o *AvailableEnvironmentResponseObject) SetServiceSupportUrl(v string) {
	o.ServiceSupportUrl = &v
}

// GetTechnicalKey returns the TechnicalKey field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetTechnicalKey() string {
	if o == nil || IsNil(o.TechnicalKey) {
		var ret string
		return ret
	}
	return *o.TechnicalKey
}

// GetTechnicalKeyOk returns a tuple with the TechnicalKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetTechnicalKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TechnicalKey) {
		return nil, false
	}
	return o.TechnicalKey, true
}

// HasTechnicalKey returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasTechnicalKey() bool {
	if o != nil && !IsNil(o.TechnicalKey) {
		return true
	}

	return false
}

// SetTechnicalKey gets a reference to the given string and assigns it to the TechnicalKey field.
func (o *AvailableEnvironmentResponseObject) SetTechnicalKey(v string) {
	o.TechnicalKey = &v
}

// GetUpdateSchema returns the UpdateSchema field value if set, zero value otherwise.
func (o *AvailableEnvironmentResponseObject) GetUpdateSchema() string {
	if o == nil || IsNil(o.UpdateSchema) {
		var ret string
		return ret
	}
	return *o.UpdateSchema
}

// GetUpdateSchemaOk returns a tuple with the UpdateSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailableEnvironmentResponseObject) GetUpdateSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateSchema) {
		return nil, false
	}
	return o.UpdateSchema, true
}

// HasUpdateSchema returns a boolean if a field has been set.
func (o *AvailableEnvironmentResponseObject) HasUpdateSchema() bool {
	if o != nil && !IsNil(o.UpdateSchema) {
		return true
	}

	return false
}

// SetUpdateSchema gets a reference to the given string and assigns it to the UpdateSchema field.
func (o *AvailableEnvironmentResponseObject) SetUpdateSchema(v string) {
	o.UpdateSchema = &v
}

func (o AvailableEnvironmentResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AvailableEnvironmentResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowAdditionalEnvironmentInstance) {
		toSerialize["allowAdditionalEnvironmentInstance"] = o.AllowAdditionalEnvironmentInstance
	}
	if !IsNil(o.AvailabilityLevel) {
		toSerialize["availabilityLevel"] = o.AvailabilityLevel
	}
	if !IsNil(o.CreateSchema) {
		toSerialize["createSchema"] = o.CreateSchema
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EnvironmentType) {
		toSerialize["environmentType"] = o.EnvironmentType
	}
	if !IsNil(o.LandscapeLabel) {
		toSerialize["landscapeLabel"] = o.LandscapeLabel
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	if !IsNil(o.PlanUpdatable) {
		toSerialize["planUpdatable"] = o.PlanUpdatable
	}
	if !IsNil(o.ServiceDescription) {
		toSerialize["serviceDescription"] = o.ServiceDescription
	}
	if !IsNil(o.ServiceDisplayName) {
		toSerialize["serviceDisplayName"] = o.ServiceDisplayName
	}
	if !IsNil(o.ServiceDocumentationUrl) {
		toSerialize["serviceDocumentationUrl"] = o.ServiceDocumentationUrl
	}
	if !IsNil(o.ServiceImageUrl) {
		toSerialize["serviceImageUrl"] = o.ServiceImageUrl
	}
	if !IsNil(o.ServiceLongDescription) {
		toSerialize["serviceLongDescription"] = o.ServiceLongDescription
	}
	if !IsNil(o.ServiceName) {
		toSerialize["serviceName"] = o.ServiceName
	}
	if !IsNil(o.ServiceSupportUrl) {
		toSerialize["serviceSupportUrl"] = o.ServiceSupportUrl
	}
	if !IsNil(o.TechnicalKey) {
		toSerialize["technicalKey"] = o.TechnicalKey
	}
	if !IsNil(o.UpdateSchema) {
		toSerialize["updateSchema"] = o.UpdateSchema
	}
	return toSerialize, nil
}

type NullableAvailableEnvironmentResponseObject struct {
	value *AvailableEnvironmentResponseObject
	isSet bool
}

func (v NullableAvailableEnvironmentResponseObject) Get() *AvailableEnvironmentResponseObject {
	return v.value
}

func (v *NullableAvailableEnvironmentResponseObject) Set(val *AvailableEnvironmentResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailableEnvironmentResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailableEnvironmentResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailableEnvironmentResponseObject(val *AvailableEnvironmentResponseObject) *NullableAvailableEnvironmentResponseObject {
	return &NullableAvailableEnvironmentResponseObject{value: val, isSet: true}
}

func (v NullableAvailableEnvironmentResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailableEnvironmentResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
