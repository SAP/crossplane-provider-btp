/*
Provisioning Service

The Provisioning service provides REST APIs that are responsible for the provisioning and deprovisioning of environment instances and tenants in the corresponding region.  Provisioning is performed after validation by the Entitlements service. Use the APIs in this service to manage and create environment instances, such as a Cloud Foundry org, in a subaccount and to retrieve the plans and quota assignments for a subaccount.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EnvironmentInstanceBindingMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentInstanceBindingMetadata{}

// EnvironmentInstanceBindingMetadata struct for EnvironmentInstanceBindingMetadata
type EnvironmentInstanceBindingMetadata struct {
	// The binding ID for the specified environment instance.
	BindingId *string `json:"bindingId,omitempty"`
	// The entity that created the binding.
	CreatedBy *string `json:"createdBy,omitempty"`
	// When the binding was created
	CreatedDate *string `json:"createdDate,omitempty"`
	// Expiry date for the binding.
	ExpiresAt *string `json:"expiresAt,omitempty"`
	// The environment instance ID associated with the binding.
	InstanceId *string `json:"instanceId,omitempty"`
}

// NewEnvironmentInstanceBindingMetadata instantiates a new EnvironmentInstanceBindingMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentInstanceBindingMetadata() *EnvironmentInstanceBindingMetadata {
	this := EnvironmentInstanceBindingMetadata{}
	return &this
}

// NewEnvironmentInstanceBindingMetadataWithDefaults instantiates a new EnvironmentInstanceBindingMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentInstanceBindingMetadataWithDefaults() *EnvironmentInstanceBindingMetadata {
	this := EnvironmentInstanceBindingMetadata{}
	return &this
}

// GetBindingId returns the BindingId field value if set, zero value otherwise.
func (o *EnvironmentInstanceBindingMetadata) GetBindingId() string {
	if o == nil || IsNil(o.BindingId) {
		var ret string
		return ret
	}
	return *o.BindingId
}

// GetBindingIdOk returns a tuple with the BindingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentInstanceBindingMetadata) GetBindingIdOk() (*string, bool) {
	if o == nil || IsNil(o.BindingId) {
		return nil, false
	}
	return o.BindingId, true
}

// HasBindingId returns a boolean if a field has been set.
func (o *EnvironmentInstanceBindingMetadata) HasBindingId() bool {
	if o != nil && !IsNil(o.BindingId) {
		return true
	}

	return false
}

// SetBindingId gets a reference to the given string and assigns it to the BindingId field.
func (o *EnvironmentInstanceBindingMetadata) SetBindingId(v string) {
	o.BindingId = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *EnvironmentInstanceBindingMetadata) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentInstanceBindingMetadata) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *EnvironmentInstanceBindingMetadata) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *EnvironmentInstanceBindingMetadata) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *EnvironmentInstanceBindingMetadata) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentInstanceBindingMetadata) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *EnvironmentInstanceBindingMetadata) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *EnvironmentInstanceBindingMetadata) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *EnvironmentInstanceBindingMetadata) GetExpiresAt() string {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentInstanceBindingMetadata) GetExpiresAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *EnvironmentInstanceBindingMetadata) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *EnvironmentInstanceBindingMetadata) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *EnvironmentInstanceBindingMetadata) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId) {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentInstanceBindingMetadata) GetInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *EnvironmentInstanceBindingMetadata) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *EnvironmentInstanceBindingMetadata) SetInstanceId(v string) {
	o.InstanceId = &v
}

func (o EnvironmentInstanceBindingMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentInstanceBindingMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BindingId) {
		toSerialize["bindingId"] = o.BindingId
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	if !IsNil(o.InstanceId) {
		toSerialize["instanceId"] = o.InstanceId
	}
	return toSerialize, nil
}

type NullableEnvironmentInstanceBindingMetadata struct {
	value *EnvironmentInstanceBindingMetadata
	isSet bool
}

func (v NullableEnvironmentInstanceBindingMetadata) Get() *EnvironmentInstanceBindingMetadata {
	return v.value
}

func (v *NullableEnvironmentInstanceBindingMetadata) Set(val *EnvironmentInstanceBindingMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentInstanceBindingMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentInstanceBindingMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentInstanceBindingMetadata(val *EnvironmentInstanceBindingMetadata) *NullableEnvironmentInstanceBindingMetadata {
	return &NullableEnvironmentInstanceBindingMetadata{value: val, isSet: true}
}

func (v NullableEnvironmentInstanceBindingMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentInstanceBindingMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
