/*
Provisioning Service

The Provisioning service provides REST APIs that are responsible for the provisioning and deprovisioning of environment instances and tenants in the corresponding region.  Provisioning is performed after validation by the Entitlements service. Use the APIs in this service to manage and create environment instances, such as a Cloud Foundry org, in a subaccount and to retrieve the plans and quota assignments for a subaccount.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetEnvironmentInstanceBindingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEnvironmentInstanceBindingResponse{}

// GetEnvironmentInstanceBindingResponse struct for GetEnvironmentInstanceBindingResponse
type GetEnvironmentInstanceBindingResponse struct {
	// A free-form hash of credentials that can be used by applications or users to access the service. MUST be returned if the service broker supports generation of credentials.
	Credentials map[string]map[string]interface{} `json:"credentials"`
	// All network endpoints that the application uses to connect to the service instance.
	Endpoints []map[string]interface{} `json:"endpoints,omitempty"`
	// An optional object containing metadata about this service binding. This metadata is mainly used to manage the service binding itself and does not contain any data needed to connect to the service instance.
	Metadata map[string]map[string]interface{} `json:"metadata,omitempty"`
	// Configuration parameters for the Service Binding.
	Parameters map[string]map[string]interface{} `json:"parameters"`
	// A URL to which the environment proxies requests for the address sent with bind_resource.route in the request body.
	RouteServiceUrl *string `json:"route_service_url,omitempty"`
	// A URL to which logs are streamed.
	SyslogDrainUrl *string `json:"syslog_drain_url,omitempty"`
	// An array of configurations for remote storage devices to be mounted into an application container filesystem.
	VolumeMounts []map[string]interface{} `json:"volume_mounts,omitempty"`
}

type _GetEnvironmentInstanceBindingResponse GetEnvironmentInstanceBindingResponse

// NewGetEnvironmentInstanceBindingResponse instantiates a new GetEnvironmentInstanceBindingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEnvironmentInstanceBindingResponse(credentials map[string]map[string]interface{}, parameters map[string]map[string]interface{}) *GetEnvironmentInstanceBindingResponse {
	this := GetEnvironmentInstanceBindingResponse{}
	this.Credentials = credentials
	this.Parameters = parameters
	return &this
}

// NewGetEnvironmentInstanceBindingResponseWithDefaults instantiates a new GetEnvironmentInstanceBindingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEnvironmentInstanceBindingResponseWithDefaults() *GetEnvironmentInstanceBindingResponse {
	this := GetEnvironmentInstanceBindingResponse{}
	return &this
}

// GetCredentials returns the Credentials field value
func (o *GetEnvironmentInstanceBindingResponse) GetCredentials() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *GetEnvironmentInstanceBindingResponse) GetCredentialsOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.Credentials, true
}

// SetCredentials sets field value
func (o *GetEnvironmentInstanceBindingResponse) SetCredentials(v map[string]map[string]interface{}) {
	o.Credentials = v
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *GetEnvironmentInstanceBindingResponse) GetEndpoints() []map[string]interface{} {
	if o == nil || IsNil(o.Endpoints) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentInstanceBindingResponse) GetEndpointsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Endpoints) {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *GetEnvironmentInstanceBindingResponse) HasEndpoints() bool {
	if o != nil && !IsNil(o.Endpoints) {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []map[string]interface{} and assigns it to the Endpoints field.
func (o *GetEnvironmentInstanceBindingResponse) SetEndpoints(v []map[string]interface{}) {
	o.Endpoints = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GetEnvironmentInstanceBindingResponse) GetMetadata() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentInstanceBindingResponse) GetMetadataOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GetEnvironmentInstanceBindingResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]map[string]interface{} and assigns it to the Metadata field.
func (o *GetEnvironmentInstanceBindingResponse) SetMetadata(v map[string]map[string]interface{}) {
	o.Metadata = v
}

// GetParameters returns the Parameters field value
func (o *GetEnvironmentInstanceBindingResponse) GetParameters() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value
// and a boolean to check if the value has been set.
func (o *GetEnvironmentInstanceBindingResponse) GetParametersOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.Parameters, true
}

// SetParameters sets field value
func (o *GetEnvironmentInstanceBindingResponse) SetParameters(v map[string]map[string]interface{}) {
	o.Parameters = v
}

// GetRouteServiceUrl returns the RouteServiceUrl field value if set, zero value otherwise.
func (o *GetEnvironmentInstanceBindingResponse) GetRouteServiceUrl() string {
	if o == nil || IsNil(o.RouteServiceUrl) {
		var ret string
		return ret
	}
	return *o.RouteServiceUrl
}

// GetRouteServiceUrlOk returns a tuple with the RouteServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentInstanceBindingResponse) GetRouteServiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RouteServiceUrl) {
		return nil, false
	}
	return o.RouteServiceUrl, true
}

// HasRouteServiceUrl returns a boolean if a field has been set.
func (o *GetEnvironmentInstanceBindingResponse) HasRouteServiceUrl() bool {
	if o != nil && !IsNil(o.RouteServiceUrl) {
		return true
	}

	return false
}

// SetRouteServiceUrl gets a reference to the given string and assigns it to the RouteServiceUrl field.
func (o *GetEnvironmentInstanceBindingResponse) SetRouteServiceUrl(v string) {
	o.RouteServiceUrl = &v
}

// GetSyslogDrainUrl returns the SyslogDrainUrl field value if set, zero value otherwise.
func (o *GetEnvironmentInstanceBindingResponse) GetSyslogDrainUrl() string {
	if o == nil || IsNil(o.SyslogDrainUrl) {
		var ret string
		return ret
	}
	return *o.SyslogDrainUrl
}

// GetSyslogDrainUrlOk returns a tuple with the SyslogDrainUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentInstanceBindingResponse) GetSyslogDrainUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SyslogDrainUrl) {
		return nil, false
	}
	return o.SyslogDrainUrl, true
}

// HasSyslogDrainUrl returns a boolean if a field has been set.
func (o *GetEnvironmentInstanceBindingResponse) HasSyslogDrainUrl() bool {
	if o != nil && !IsNil(o.SyslogDrainUrl) {
		return true
	}

	return false
}

// SetSyslogDrainUrl gets a reference to the given string and assigns it to the SyslogDrainUrl field.
func (o *GetEnvironmentInstanceBindingResponse) SetSyslogDrainUrl(v string) {
	o.SyslogDrainUrl = &v
}

// GetVolumeMounts returns the VolumeMounts field value if set, zero value otherwise.
func (o *GetEnvironmentInstanceBindingResponse) GetVolumeMounts() []map[string]interface{} {
	if o == nil || IsNil(o.VolumeMounts) {
		var ret []map[string]interface{}
		return ret
	}
	return o.VolumeMounts
}

// GetVolumeMountsOk returns a tuple with the VolumeMounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentInstanceBindingResponse) GetVolumeMountsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.VolumeMounts) {
		return nil, false
	}
	return o.VolumeMounts, true
}

// HasVolumeMounts returns a boolean if a field has been set.
func (o *GetEnvironmentInstanceBindingResponse) HasVolumeMounts() bool {
	if o != nil && !IsNil(o.VolumeMounts) {
		return true
	}

	return false
}

// SetVolumeMounts gets a reference to the given []map[string]interface{} and assigns it to the VolumeMounts field.
func (o *GetEnvironmentInstanceBindingResponse) SetVolumeMounts(v []map[string]interface{}) {
	o.VolumeMounts = v
}

func (o GetEnvironmentInstanceBindingResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEnvironmentInstanceBindingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["credentials"] = o.Credentials
	if !IsNil(o.Endpoints) {
		toSerialize["endpoints"] = o.Endpoints
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["parameters"] = o.Parameters
	if !IsNil(o.RouteServiceUrl) {
		toSerialize["route_service_url"] = o.RouteServiceUrl
	}
	if !IsNil(o.SyslogDrainUrl) {
		toSerialize["syslog_drain_url"] = o.SyslogDrainUrl
	}
	if !IsNil(o.VolumeMounts) {
		toSerialize["volume_mounts"] = o.VolumeMounts
	}
	return toSerialize, nil
}

func (o *GetEnvironmentInstanceBindingResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"credentials",
		"parameters",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetEnvironmentInstanceBindingResponse := _GetEnvironmentInstanceBindingResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetEnvironmentInstanceBindingResponse)

	if err != nil {
		return err
	}

	*o = GetEnvironmentInstanceBindingResponse(varGetEnvironmentInstanceBindingResponse)

	return err
}

type NullableGetEnvironmentInstanceBindingResponse struct {
	value *GetEnvironmentInstanceBindingResponse
	isSet bool
}

func (v NullableGetEnvironmentInstanceBindingResponse) Get() *GetEnvironmentInstanceBindingResponse {
	return v.value
}

func (v *NullableGetEnvironmentInstanceBindingResponse) Set(val *GetEnvironmentInstanceBindingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEnvironmentInstanceBindingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEnvironmentInstanceBindingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEnvironmentInstanceBindingResponse(val *GetEnvironmentInstanceBindingResponse) *NullableGetEnvironmentInstanceBindingResponse {
	return &NullableGetEnvironmentInstanceBindingResponse{value: val, isSet: true}
}

func (v NullableGetEnvironmentInstanceBindingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEnvironmentInstanceBindingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
